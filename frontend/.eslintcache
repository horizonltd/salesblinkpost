[{"/Users/abdulmutallib/Desktop/eAgric/frontend/src/index.js":"1","/Users/abdulmutallib/Desktop/eAgric/frontend/src/reportWebVitals.js":"2","/Users/abdulmutallib/Desktop/eAgric/frontend/src/App.js":"3","/Users/abdulmutallib/Desktop/eAgric/frontend/src/components/Header/Header.js":"4","/Users/abdulmutallib/Desktop/eAgric/frontend/src/components/Footer/Footer.js":"5","/Users/abdulmutallib/Desktop/eAgric/frontend/src/components/SingleProduct/SingleProduct.js":"6","/Users/abdulmutallib/Desktop/eAgric/frontend/src/container/Home/Home.js":"7","/Users/abdulmutallib/Desktop/eAgric/frontend/src/components/Rating/Rating.js":"8","/Users/abdulmutallib/Desktop/eAgric/frontend/src/store.js":"9","/Users/abdulmutallib/Desktop/eAgric/frontend/src/components/Helpers/Loader/Loader.js":"10","/Users/abdulmutallib/Desktop/eAgric/frontend/src/components/Helpers/Message/Message.js":"11","/Users/abdulmutallib/Desktop/eAgric/frontend/src/components/Cart/Cart.js":"12","/Users/abdulmutallib/Desktop/eAgric/frontend/src/constants/constants.js":"13","/Users/abdulmutallib/Desktop/eAgric/frontend/src/reducers/reducers.js":"14","/Users/abdulmutallib/Desktop/eAgric/frontend/src/actions/actions.js":"15","/Users/abdulmutallib/Desktop/eAgric/frontend/src/components/Login/Login.js":"16","/Users/abdulmutallib/Desktop/eAgric/frontend/src/container/FormsContainer/FormsContainer.js":"17","/Users/abdulmutallib/Desktop/eAgric/frontend/src/components/UserManagement/PasswordResetRequest/PasswordResetRequest.js":"18","/Users/abdulmutallib/Desktop/eAgric/frontend/src/components/Register/Register.js":"19","/Users/abdulmutallib/Desktop/eAgric/frontend/src/components/Profile/Profile.js":"20","/Users/abdulmutallib/Desktop/eAgric/frontend/src/components/Shipping/Shipping.js":"21","/Users/abdulmutallib/Desktop/eAgric/frontend/src/container/CheckOutSteps/CheckOutSteps.js":"22","/Users/abdulmutallib/Desktop/eAgric/frontend/src/components/Payment/Payment.js":"23","/Users/abdulmutallib/Desktop/eAgric/frontend/src/components/PlaceOrder/PlaceOrder.js":"24","/Users/abdulmutallib/Desktop/eAgric/frontend/src/components/Order/Order.js":"25","/Users/abdulmutallib/Desktop/eAgric/frontend/src/components/UserManagement/UsersList/UsersList.js":"26","/Users/abdulmutallib/Desktop/eAgric/frontend/src/components/ProductsList/ProductsList.js":"27","/Users/abdulmutallib/Desktop/eAgric/frontend/src/components/UserManagement/EditUser/EditUser.js":"28","/Users/abdulmutallib/Desktop/eAgric/frontend/src/components/OrderList/OrderList.js":"29","/Users/abdulmutallib/Desktop/eAgric/frontend/src/components/SearchBox/SearchBox.js":"30","/Users/abdulmutallib/Desktop/eAgric/frontend/src/container/Paginate/Paginate.js":"31","/Users/abdulmutallib/Desktop/eAgric/frontend/src/container/TopProductsCarousel/TopProductsCarousel.js":"32","/Users/abdulmutallib/Desktop/eAgric/frontend/src/components/Header/HeaderScreen.js":"33","/Users/abdulmutallib/Desktop/eAgric/frontend/src/components/Helpers/AlertInfo/AlertInfo.js":"34","/Users/abdulmutallib/Desktop/eAgric/frontend/src/container/PrivateRoute/PrivateRoute.js":"35","/Users/abdulmutallib/Desktop/eAgric/frontend/src/container/MainCarousel/MainCarouel.js":"36","/Users/abdulmutallib/Desktop/blinkpost/backend/frontend/src/index.js":"37","/Users/abdulmutallib/Desktop/blinkpost/backend/frontend/src/reportWebVitals.js":"38","/Users/abdulmutallib/Desktop/blinkpost/backend/frontend/src/store.js":"39","/Users/abdulmutallib/Desktop/blinkpost/backend/frontend/src/App.js":"40","/Users/abdulmutallib/Desktop/blinkpost/backend/frontend/src/reducers/reducers.js":"41","/Users/abdulmutallib/Desktop/blinkpost/backend/frontend/src/components/Login/Login.js":"42","/Users/abdulmutallib/Desktop/blinkpost/backend/frontend/src/components/Register/Register.js":"43","/Users/abdulmutallib/Desktop/blinkpost/backend/frontend/src/container/Home/Home.js":"44","/Users/abdulmutallib/Desktop/blinkpost/backend/frontend/src/components/Profile/Profile.js":"45","/Users/abdulmutallib/Desktop/blinkpost/backend/frontend/src/components/Header/HeaderScreen.js":"46","/Users/abdulmutallib/Desktop/blinkpost/backend/frontend/src/container/PrivateRoute/PrivateRoute.js":"47","/Users/abdulmutallib/Desktop/blinkpost/backend/frontend/src/components/Footer/Footer.js":"48","/Users/abdulmutallib/Desktop/blinkpost/backend/frontend/src/constants/constants.js":"49","/Users/abdulmutallib/Desktop/blinkpost/backend/frontend/src/container/Paginate/Paginate.js":"50","/Users/abdulmutallib/Desktop/blinkpost/backend/frontend/src/container/FormsContainer/FormsContainer.js":"51","/Users/abdulmutallib/Desktop/blinkpost/backend/frontend/src/components/Post/Post.js":"52","/Users/abdulmutallib/Desktop/blinkpost/backend/frontend/src/components/Rating/Rating.js":"53","/Users/abdulmutallib/Desktop/blinkpost/backend/frontend/src/actions/actions.js":"54","/Users/abdulmutallib/Desktop/blinkpost/backend/frontend/src/components/SearchBox/SearchBox.js":"55","/Users/abdulmutallib/Desktop/blinkpost/backend/frontend/src/components/Helpers/Message/Message.js":"56","/Users/abdulmutallib/Desktop/blinkpost/backend/frontend/src/components/Helpers/Loader/Loader.js":"57","/Users/abdulmutallib/Desktop/blinkpost/backend/frontend/src/components/AddEditPost/AddEditPosts.js":"58","/Users/abdulmutallib/Desktop/blinkpost/backend/frontend/src/components/PostsList/PostsList.js":"59","/Users/abdulmutallib/Desktop/blinkpost/backend/frontend/src/components/SinglePost/SinglePost.js":"60"},{"size":595,"mtime":1643320759302,"results":"61","hashOfConfig":"62"},{"size":362,"mtime":1643132979939,"results":"63","hashOfConfig":"62"},{"size":3008,"mtime":1645018337261,"results":"64","hashOfConfig":"62"},{"size":3539,"mtime":1644586993468,"results":"65","hashOfConfig":"62"},{"size":364,"mtime":1643134093319,"results":"66","hashOfConfig":"62"},{"size":16536,"mtime":1644959805163,"results":"67","hashOfConfig":"62"},{"size":2289,"mtime":1645025993046,"results":"68","hashOfConfig":"62"},{"size":1905,"mtime":1643207310041,"results":"69","hashOfConfig":"62"},{"size":2514,"mtime":1644794033410,"results":"70","hashOfConfig":"62"},{"size":455,"mtime":1643537056586,"results":"71","hashOfConfig":"62"},{"size":228,"mtime":1643365700359,"results":"72","hashOfConfig":"62"},{"size":6801,"mtime":1645016403722,"results":"73","hashOfConfig":"62"},{"size":4850,"mtime":1644573193121,"results":"74","hashOfConfig":"62"},{"size":14478,"mtime":1644573345693,"results":"75","hashOfConfig":"62"},{"size":20809,"mtime":1645015292141,"results":"76","hashOfConfig":"62"},{"size":2846,"mtime":1644422463446,"results":"77","hashOfConfig":"62"},{"size":379,"mtime":1643534017900,"results":"78","hashOfConfig":"62"},{"size":1753,"mtime":1643548035981,"results":"79","hashOfConfig":"62"},{"size":4077,"mtime":1644422373967,"results":"80","hashOfConfig":"62"},{"size":7434,"mtime":1644416721401,"results":"81","hashOfConfig":"62"},{"size":4510,"mtime":1645017966259,"results":"82","hashOfConfig":"62"},{"size":1602,"mtime":1643751371230,"results":"83","hashOfConfig":"62"},{"size":2439,"mtime":1643812600482,"results":"84","hashOfConfig":"62"},{"size":15471,"mtime":1644963091493,"results":"85","hashOfConfig":"62"},{"size":20599,"mtime":1645091260212,"results":"86","hashOfConfig":"62"},{"size":3762,"mtime":1644341371663,"results":"87","hashOfConfig":"62"},{"size":4960,"mtime":1644445385773,"results":"88","hashOfConfig":"62"},{"size":3952,"mtime":1644144085668,"results":"89","hashOfConfig":"62"},{"size":3888,"mtime":1644420588705,"results":"90","hashOfConfig":"62"},{"size":1536,"mtime":1644589195974,"results":"91","hashOfConfig":"62"},{"size":883,"mtime":1644488211058,"results":"92","hashOfConfig":"62"},{"size":1510,"mtime":1644576486865,"results":"93","hashOfConfig":"62"},{"size":3365,"mtime":1644587266440,"results":"94","hashOfConfig":"62"},{"size":297,"mtime":1644676451055,"results":"95","hashOfConfig":"62"},{"size":731,"mtime":1645017477838,"results":"96","hashOfConfig":"62"},{"size":2426,"mtime":1645020006079,"results":"97","hashOfConfig":"62"},{"size":595,"mtime":1643320759301,"results":"98","hashOfConfig":"99"},{"size":362,"mtime":1643132979938,"results":"100","hashOfConfig":"99"},{"size":1334,"mtime":1645183092675,"results":"101","hashOfConfig":"99"},{"size":1436,"mtime":1645181819741,"results":"102","hashOfConfig":"99"},{"size":6603,"mtime":1645183423847,"results":"103","hashOfConfig":"99"},{"size":2712,"mtime":1645179872480,"results":"104","hashOfConfig":"99"},{"size":4077,"mtime":1644422373966,"results":"105","hashOfConfig":"99"},{"size":1675,"mtime":1645139036009,"results":"106","hashOfConfig":"99"},{"size":5576,"mtime":1645183776667,"results":"107","hashOfConfig":"99"},{"size":2907,"mtime":1645210688910,"results":"108","hashOfConfig":"99"},{"size":731,"mtime":1645017477838,"results":"109","hashOfConfig":"99"},{"size":361,"mtime":1645137237152,"results":"110","hashOfConfig":"99"},{"size":2318,"mtime":1645183305753,"results":"111","hashOfConfig":"99"},{"size":880,"mtime":1645178426293,"results":"112","hashOfConfig":"99"},{"size":379,"mtime":1643534017899,"results":"113","hashOfConfig":"99"},{"size":670,"mtime":1645181681950,"results":"114","hashOfConfig":"99"},{"size":1905,"mtime":1643207310040,"results":"115","hashOfConfig":"116"},{"size":9207,"mtime":1645183168680,"results":"117","hashOfConfig":"99"},{"size":1768,"mtime":1645139121124,"results":"118","hashOfConfig":"99"},{"size":228,"mtime":1643365700358,"results":"119","hashOfConfig":"99"},{"size":455,"mtime":1643537056585,"results":"120","hashOfConfig":"99"},{"size":6033,"mtime":1645191796913,"results":"121","hashOfConfig":"99"},{"size":4382,"mtime":1645192137906,"results":"122","hashOfConfig":"99"},{"size":8327,"mtime":1645184376040,"results":"123","hashOfConfig":"99"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1icojd7",{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1y4x3dc",{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"238","messages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},"1j0du1t",{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"261","messages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/abdulmutallib/Desktop/eAgric/frontend/src/index.js",[],"/Users/abdulmutallib/Desktop/eAgric/frontend/src/reportWebVitals.js",[],"/Users/abdulmutallib/Desktop/eAgric/frontend/src/App.js",["263"],"import Footer from './components/Footer/Footer';\nimport Header from './components/Header/Header';\nimport { Container } from \"react-bootstrap\";\nimport Home from \"./container/Home/Home\";\nimport SingleProduct from \"./components/SingleProduct/SingleProduct\";\nimport Cart from \"./components/Cart/Cart\";\nimport Login from \"./components/Login/Login\";\nimport {HashRouter as Router, Route} from \"react-router-dom\";\nimport PasswordResetRequest from \"./components/UserManagement/PasswordResetRequest/PasswordResetRequest\";\nimport PasswordResetConfirm from \"./components/UserManagement/PasswordResetRequest/PasswordResetRequest\";\nimport Register from \"./components/Register/Register\";\nimport Profile from \"./components/Profile/Profile\";\nimport Shipping from \"./components/Shipping/Shipping\";\nimport Payment from \"./components/Payment/Payment\";\nimport PlaceOrder from \"./components/PlaceOrder/PlaceOrder\";\nimport Order from \"./components/Order/Order\";\nimport UsersList from \"./components/UserManagement/UsersList/UsersList\";\nimport ProductsList from \"./components/ProductsList/ProductsList\";\nimport EditUser from \"./components/UserManagement/EditUser/EditUser\";\nimport Post from \"./components/Post/Post\";\nimport OrderList from \"./components/OrderList/OrderList\";\nimport HeaderScreen from \"./components/Header/HeaderScreen\";\nimport PrivateRoute from \"./container/PrivateRoute/PrivateRoute\";\n\n\nfunction App() {\n    return (\n        <Router>\n            <HeaderScreen />\n\n            <main className=\"py-3\">\n                <Container>\n\n                    <Route path='/' component={Home} exact />\n                    <Route path='/product/:id' component={SingleProduct} />\n                    <Route path='/cart/:id?' component={Cart} />\n                    <Route path='/login/' component={Login} />\n                    <Route path='/register/' component={Register} />\n                    <PrivateRoute path='/shipping/' component={Shipping} />\n                    <PrivateRoute path='/payment/' component={Payment} />\n\n                    <PrivateRoute path='/profile/' component={Profile} />\n                    <PrivateRoute path='/admin/users/' component={UsersList} />\n                    <PrivateRoute path='/admin/user/:id/edit/' component={EditUser} />\n                    <PrivateRoute path='/admin/products/' component={ProductsList} />\n                    <PrivateRoute path='/admin/product/:id/edit/' component={Post} />\n                    <PrivateRoute path='/admin/order/' component={OrderList} />\n                    <PrivateRoute path='/placeorder/' component={PlaceOrder} />\n                    <PrivateRoute path='/order/:id' component={Order} />\n                    <Route exact path='/reset-password' component={PasswordResetRequest} />\n                    <Route exact path='/password/reset/confirm/:uid/:token' component={ PasswordResetConfirm } />\n                </Container>\n            </main>\n\n            <Footer />\n        </Router>\n    );\n}\n\nexport default App;\n","/Users/abdulmutallib/Desktop/eAgric/frontend/src/components/Header/Header.js",[],"/Users/abdulmutallib/Desktop/eAgric/frontend/src/components/Footer/Footer.js",[],"/Users/abdulmutallib/Desktop/eAgric/frontend/src/components/SingleProduct/SingleProduct.js",["264","265","266"],"import React, { useState, useEffect } from \"react\";\nimport {Row, Col, Image, ListGroup, Button, Card, Form} from \"react-bootstrap\";\nimport Rating from \"../Rating/Rating\";\nimport {Link} from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"../../components/Helpers/Loader/Loader\";\nimport Message from \"../../components/Helpers/Message/Message\";\nimport { listProductDetails, listPurchase, createProductReviewAction } from \"../../actions/actions\";\nimport { CREATE_PRODUCT_REVIEW_RESET } from \"../../constants/constants\";\n\n\nfunction SingleProduct({ match, history, location }) {\n    const [qty, setQty] = useState(1);\n    const [delivery, setDelivery] = useState(\"Rare\");\n    const [rating, setRating] = useState(0);\n    const [comment, setComment] = useState('');\n    const [period, setPeriod] = useState(1);\n\n    const dispatch = useDispatch();\n    const productDetail = useSelector(state => state.productDetails) // productDetails from combineReducer\n    const { loading, error, product } = productDetail\n\n    const purchaseLists = useSelector(state => state.purchaseList) // productDetails from combineReducer\n    const { purchases } = purchaseLists\n\n    const createProductReviewS = useSelector(state => state.createProductReviewS) // productDetails from combineReducer\n    const { loading: createProductReviewLoading, error: createProductReviewError, success: createProductReviewSuccess } = createProductReviewS\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    // PRODUCT RARING PRICE\n    const period_price = product.period_price\n    console.log(\"Period Price: \" ,period_price)\n    console.log(\"Period Price: \" ,period_price)\n\n    useEffect(() =>{\n        dispatch(listPurchase())\n        if (createProductReviewSuccess){\n            setRating(0)\n            setComment('')\n            dispatch({type: CREATE_PRODUCT_REVIEW_RESET})\n\n            setPeriod(product.period)\n        }\n        dispatch(listProductDetails(match.params.id))\n\n    }, [dispatch, match, location, history, createProductReviewSuccess])\n\n    const addToCaryHandler = () => {\n        if (delivery === 'Rare'){\n            history.push(`/cart/${match.params.id}?qty=${qty}?purchase=${delivery}?period=${period}?period_price=${period_price}`)\n        }else {\n            const period_price = 0;\n            const period = 0;\n            history.push(`/cart/${match.params.id}?qty=${qty}?purchase=${delivery}?period=${period}?period_price=${period_price}`)\n        }\n    }\n\n    const submitProductReviewHandler = (e) => {\n        e.preventDefault()\n        dispatch(createProductReviewAction(\n            match.params.id,\n            {\n                rating,\n                comment\n            }\n        ))\n    }\n\n    return(\n        <div>\n            <Link to='/' className='btn btn-light my-3'>Go Back</Link>\n\n            { loading ?\n                <Loader />\n                : error\n                ? <Message variant='danger'>{error}</Message>\n                    : (\n                        <div>\n                            <Row>\n                                <Col md={6}>\n                                    <Image src={product.image} alt={product.name} fluid />\n                                </Col>\n                                <Col md={3}>\n                                    <ListGroup variant=\"flush\">\n                                        <ListGroup.Item>\n                                            <h3>{product.name}</h3>\n                                        </ListGroup.Item>\n\n                                        <ListGroup.Item>\n                                            <Rating value={product.rating} text={product.numReviews + ' reviews'} color={'#f8e825'}/>\n                                        </ListGroup.Item>\n\n                                        <ListGroup.Item>\n                                            Price: ₦{product.price}\n                                        </ListGroup.Item>\n\n                                        <ListGroup.Item>\n                                            Description: {product.description}\n                                        </ListGroup.Item>\n                                    </ListGroup>\n                                </Col>\n\n                                <Col md={3}>\n                                    <Card>\n                                        <ListGroup variant=\"flush\">\n                                            <ListGroup.Item>\n                                                <Row>\n                                                    <Col>Price</Col>\n                                                    <Col><strong>₦{product.price}</strong></Col>\n                                                </Row>\n                                            </ListGroup.Item>\n\n                                            <ListGroup.Item>\n                                                <Row>\n                                                    <Col>Status</Col>\n                                                    <Col>{product.countInStock > 0 ? 'In Stock' : \"Out of Stock\"}</Col>\n                                                </Row>\n                                            </ListGroup.Item>\n\n                                            {product.countInStock > 0 && (\n                                                <ListGroup.Item>\n                                                    <Row>\n                                                        <Col>Qty</Col>\n                                                        <Col xs='auto' className='my-1'>\n                                                            <Form.Control\n                                                                as=\"select\"\n                                                                value={qty}\n                                                                size='sm'\n                                                                onChange={(e) => setQty(\n                                                                    e.target.value\n                                                                )}>\n                                                                {\n                                                                    [...Array(product.countInStock).keys()].map((x) =>(\n                                                                        <option key={ x + 1} value={x + 1}>\n                                                                            {x + 1}\n                                                                        </option>\n                                                                    ))\n                                                                }\n                                                            </Form.Control>\n                                                        </Col>\n                                                    </Row>\n                                                </ListGroup.Item>\n                                            )}\n\n                                            <ListGroup.Item>\n                                                <Row>\n                                                    <Col hidden={product.countInStock === 0}>Purchase to</Col>\n                                                    <Col>\n                                                        <Form.Select\n\n                                                            hidden={product.countInStock === 0}\n                                                            onChange={(e) => setDelivery(\n                                                                e.target.value\n                                                            )}\n                                                            value={delivery}\n                                                            size='sm' style={{\n                                                            fontSize: '13px',\n                                                            width: '100%',\n                                                            marginRight: '50px'\n                                                        }}>\n\n                                                            {purchases.map(purchase => (\n                                                                <option key={purchase.id} value={purchase.title}>\n                                                                    {purchase.title}\n                                                                </option>\n\n                                                            ))}\n                                                        </Form.Select>\n\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n\n\n                                            <ListGroup.Item>\n                                                <Row>\n                                                    <Col hidden={delivery == 'Deliver'}>Week(s)</Col>\n                                                    <Col>\n                                                        <Form.Select\n                                                            hidden={delivery == 'Deliver'}\n                                                            onChange={(e) => setPeriod(\n                                                                e.target.value\n                                                            )}\n                                                            value={period}\n                                                            size='sm' style={{\n                                                            fontSize: '13px',\n                                                            width: '100%',\n                                                            marginRight: '50px'\n                                                        }}>\n\n                                                            {\n                                                                [...Array(product.period).keys()].map((x) =>(\n                                                                    <option key={ x + 1} value={x + 1}>\n                                                                        {x + 1}\n                                                                    </option>\n                                                                ))\n                                                            }\n\n                                                        </Form.Select>\n\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n\n\n\n\n                                            <ListGroup.Item>\n                                                <Row\n                                                    onClick={addToCaryHandler}\n                                                >\n                                                    <Button className=\"btn-block\" disabled={product.countInStock === 0 || product.countInStock < 0}>\n                                                        Opt-In\n                                                    </Button>\n                                                </Row>\n                                            </ListGroup.Item>\n\n                                        </ListGroup>\n                                    </Card>\n                                </Col>\n\n                                <Col md={3}></Col>\n\n                            </Row>\n                            <Row>\n                                <Col md={6}>\n                                    <h4>Post Reviews</h4>\n                                    {product.reviews.length === 0 && <Message variant='info'>There is no review yet for this product.</Message> }\n\n                                    <ListGroup variant='flush'>\n                                        {product.reviews.map((review) => (\n                                            <ListGroup.Item key={review._id}>\n                                                <strong>{review.name}</strong>\n                                                <Rating value={review.rating} color='#f8e825' />\n                                                <p>{review.createdAt.substring(0,10)}</p>\n                                                <p>{review.comment}</p>\n                                            </ListGroup.Item>\n                                        ))}\n\n                                        <ListGroup.Item>\n                                            <h4>Submit Review</h4>\n\n                                            {createProductReviewLoading && <Loader />}\n                                            {createProductReviewSuccess && <Message variant='success'>{createProductReviewSuccess}</Message> }\n                                            {createProductReviewError && <Message variant='danger'>{createProductReviewError}</Message> }\n\n\n                                            {userInfo ? (\n                                                <Form onSubmit={submitProductReviewHandler}>\n                                                    <Form.Group controlId='rating'>\n                                                        <Form.Label>Rating</Form.Label>\n                                                        <Form.Control\n                                                            as='select'\n                                                            value={rating}\n                                                            onChange={(e) => setRating(e.target.value)}>\n                                                            <option value=''>Select...</option>\n                                                            <option value='1'>1 (Poor)</option>\n                                                            <option value='2'>2 (Fair)</option>\n                                                            <option value='3'>3 (Good)</option>\n                                                            <option value='4'>4 (Very Good)</option>\n                                                            <option value='5'>5 (Excellent)</option>\n                                                        </Form.Control>\n                                                        </Form.Group>\n\n                                                        <br/>\n\n                                                        <Form.Group controlId='comment'>\n                                                            <label>Review</label>\n                                                            <Form.Control\n                                                                required\n                                                                as='textarea'\n                                                                value={comment}\n                                                                style={{ height: '120px'}}\n                                                                onChange={(e) => setComment(e.target.value)}\n                                                                row='5'>\n                                                            </Form.Control>\n                                                        </Form.Group>\n\n                                                    <br />\n                                                    <Button disabled={createProductReviewLoading} type='submit' variant='primary'>Submit</Button>\n\n                                                </Form>\n                                            ) : (\n                                                <Message variant='info' >Please\n                                                    <Link\n                                                        to={redirect ? `/login?redirect=${redirect}` : '/login'}>login to submit a review</Link>\n                                                </Message>\n                                            )}\n                                        </ListGroup.Item>\n                                    </ListGroup>\n                                </Col>\n                            </Row>\n                        </div>\n                    )\n            }\n\n        </div>\n    )\n}\n\nexport default SingleProduct;","/Users/abdulmutallib/Desktop/eAgric/frontend/src/container/Home/Home.js",["267","268","269"],"import React, { useEffect }from \"react\";\nimport {Row, Col, Card} from \"react-bootstrap\";\nimport Post from \"../../components/Post/Post\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"../../components/Helpers/Loader/Loader\";\nimport Message from \"../../components/Helpers/Message/Message\";\nimport { listProducts } from \"../../actions/actions\";\nimport Paginate from \"../Paginate/Paginate\";\nimport TopProductsCarousel from \"../TopProductsCarousel/TopProductsCarousel\";\nimport AlertInfo from \"../../components/Helpers/AlertInfo/AlertInfo\";\nimport MainCarouel from \"../MainCarousel/MainCarouel\";\n\nfunction Home({ history }) {\n    const dispatch = useDispatch()\n    const productsList = useSelector(state => state.productsList) // productsList from combineReducer\n    const { error, loading, products, page, pages} = productsList\n\n    let keyword = history.location.search\n\n    // Update this when home loaded\n    useEffect(() =>{\n        dispatch(listProducts(keyword))\n        // console.log(keyword)\n    }, [dispatch, keyword])\n\n    let emergency = \"Kindly send complain to\";\n\n    return(\n        <div className=\"home-content-wrapper\">\n\n            {/*<AlertInfo />*/}\n\n            {!keyword && <TopProductsCarousel />}\n\n\n            <br/>\n            <div className=\"product-introduction\">\n                <h4 className=\"product-introduction-text\">Latest Products</h4>\n            </div>\n            <br/>\n\n            {loading ? <Loader />\n                : error ?\n                    <Message variant='danger'>\n                        {error}\n                        <br/>\n                        {emergency} <strong style={{ textDecorationLine: 'underline' }}>help@aikinyi.com</strong>\n                    </Message>\n\n                    : <div>\n                        <Row>\n                            {products.map(product => (\n                                <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                                    <Post product={product}/>\n                                </Col>\n                            ))}\n                        </Row>\n                        <Paginate page={page} pages={pages} keyword={keyword} />\n                    </div>\n            }\n\n        </div>\n    )\n}\n\nexport default Home;","/Users/abdulmutallib/Desktop/eAgric/frontend/src/components/Rating/Rating.js",[],"/Users/abdulmutallib/Desktop/eAgric/frontend/src/store.js",[],"/Users/abdulmutallib/Desktop/eAgric/frontend/src/components/Helpers/Loader/Loader.js",[],"/Users/abdulmutallib/Desktop/eAgric/frontend/src/components/Helpers/Message/Message.js",[],"/Users/abdulmutallib/Desktop/eAgric/frontend/src/components/Cart/Cart.js",["270","271"],"import React, {useEffect} from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {Row, Col, ListGroup, Image, Form, Button, Card, ListGroupItem} from \"react-bootstrap\";\nimport Message from \"../Helpers/Message/Message\";\nimport {addToCart, removeCartItem} from \"../../actions/actions\";\n// import { addToCart } from \"../../actions/actions\";\n\nfunction Cart({match, location, history}) {\n    const productId = match.params.id\n\n    const deliveryArray = location.search ? location.search.split('=')[2] : 1\n    const deliveryString = deliveryArray.toString().split(\"?\")[0];\n    const delivery = deliveryString\n\n\n    const qtyArray = location.search ? location.search.split('?')[1] : 1\n    const qtyAsString = qtyArray.toString().split(\"=\")[1];\n    const qty = Number(qtyAsString);\n\n\n    // RARING PERIOD ALGORITHMS\n    const weekArray = location.search ? location.search.split('?')[3] : 1\n    const weekAsString = weekArray.toString().split(\"=\")[1];\n    const week = Number(weekAsString);\n\n    // RARING PERIOD CHARGES ALGORITHMS\n    const week_priceArray = location.search ? location.search.split('?')[4] : 1\n    const week_priceAsString = week_priceArray.toString().split(\"=\")[1];\n    const week_price = Number(week_priceAsString);\n\n    // CALCULATING WEEK AND WEEK PRICE TO FIND PERIOD PRICE\n    const period_price = (Number(week * week_price * qty).toFixed(2))\n\n\n\n    const  dispatch = useDispatch()\n    const cart = useSelector(state => state.cart)\n\n    const { cartItems } = cart\n\n    useEffect(() =>{\n            if (productId){\n                // dispatch(addToCart(productId, qty, delivery, week, period_price))\n                if (delivery == 'Deliver'){\n                    const period_price = 0\n                    const week = 0\n                    dispatch(addToCart(productId, qty, delivery, week, period_price))\n                }else {\n                    dispatch(addToCart(productId, qty, delivery, week, period_price))\n                }\n            }\n    }, [dispatch, productId, qty, delivery, week, period_price])\n\n    const removeItemFromCartHandler = (id) => {\n        dispatch(removeCartItem(id))\n    }\n\n    const checkoutHandler = () => {\n        history.push('/login?redirect=shipping')\n    }\n\n    return(\n        <div>\n            <Row>\n                <Col md={8}>\n                    <div className=\"product-introduction\">\n                        <h4 className=\"product-introduction-text\">Shopping Cart</h4>\n                    </div>\n                    <br/>\n\n                    {cartItems.length === 0 ? (\n                        <Message variant='info'>\n                            Your shopping cart is empty <Link to=\"/\">Go back to Marketplace</Link>\n                        </Message>\n                    ) : (\n                        <ListGroup variant='flush'>\n                            {cartItems.map(item => (\n                                <ListGroup.Item key={item.product}>\n                                    <Row>\n                                        <Col md={2}>\n                                            <Image src={item.image} alt={item.name} fluid rounded />\n                                        </Col>\n                                        <Col md={3}>\n                                            <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                        </Col>\n                                        <Col md={2}>₦{item.price}</Col>\n                                        <Col md={3}>\n                                            <Form.Control\n                                                as=\"select\"\n                                                value={item.qty}\n                                                size='sm'\n                                                onChange={(e) => dispatch(\n                                                    addToCart(item.product, Number(e.target.value))\n                                                )}>\n                                                {\n                                                    // [...Array(Math.max(0, props.ingredients[igKey]))]\n                                                    [...Array(Math.max(0, item.countInStock)).keys()].map((x) =>(\n                                                        <option key={ x + 1}>\n                                                            {x + 1}\n                                                        </option>\n                                                    ))\n                                                }\n                                            </Form.Control>\n                                        </Col>\n                                        <Col md={1}>\n                                            <Button\n                                                type='button'\n                                                variant='light'\n                                                onClick={() => removeItemFromCartHandler(item.product)}>\n                                                <i className='fas fa-trash'></i>\n                                            </Button>\n                                        </Col>\n\n                                    </Row>\n\n                                </ListGroup.Item>\n                            ))}\n\n                        </ListGroup>\n                    )}\n                </Col>\n                <Col md={4}>\n                    <Card>\n                        <ListGroup variant='flush'>\n\n                            <ListGroup.Item>\n                                <div className=\"product-introduction\">\n                                    <h4 className=\"product-introduction-text\">Subtotal</h4>\n                                </div>\n                                Total Items: <strong>{cartItems.reduce((acc, item) => acc + item.qty, 0)}</strong>\n                                <br/>\n                                <p style={{ paddingTop: '5px' }}>Total Price: <strong>₦{cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}</strong></p>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Button type='button'\n                                        onClick={checkoutHandler}\n                                        disabled={cartItems.length === 0}\n                                        className='btn-block' style={{width: '100%'}}>\n                                    Checkout Selected Items\n                                </Button>\n                            </ListGroup.Item>\n\n                        </ListGroup>\n                    </Card>\n                </Col>\n            </Row>\n        </div>\n    );\n}\n\nexport default Cart;","/Users/abdulmutallib/Desktop/eAgric/frontend/src/constants/constants.js",[],"/Users/abdulmutallib/Desktop/eAgric/frontend/src/reducers/reducers.js",[],"/Users/abdulmutallib/Desktop/eAgric/frontend/src/actions/actions.js",["272","273","274","275","276","277","278"],"import axios from \"axios\";\nimport {\n    PRODUCTS_LIST_REQUEST,\n    PRODUCTS_LIST_SUCCESS,\n    PRODUCTS_LIST_FAIL,\n    PRODUCTS_DETAILS_REQUEST,\n    PRODUCTS_DETAILS_SUCCESS,\n    PRODUCTS_DETAILS_FAIL,\n    PURCHASE_LIST_REQUEST,\n    PURCHASE_LIST_SUCCESS,\n    PURCHASE_LIST_FAIL,\n    REMOVE_CART_ITEM,\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n    ADD_CART_ITEM,\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n    USER_LOGOUT,\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_RESET,\n    USER_DETAILS_RESET,\n    ADD_CART_SHIPPING_ADDRESS,\n    SAVE_CART_PAYMENT_METHOD,\n    CREATE_ORDER_REQUEST,\n    CREATE_ORDER_SUCCESS,\n    CREATE_ORDER_FAIL,\n    CART_CLEAR_ITEM,\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n    UPDATE_ORDER_TO_PAY_REQUEST,\n    UPDATE_ORDER_TO_PAY_SUCCESS,\n    UPDATE_ORDER_TO_PAY_FAIL,\n    UPDATE_ORDER_TO_PAY_RESET,\n    LIST_MY_ORDERS_REQUEST,\n    LIST_MY_ORDERS_SUCCESS,\n    LIST_MY_ORDERS_FAIL,\n    LIST_MY_ORDERS_RESET,\n    USERS_LIST_REQUEST,\n    USERS_LIST_SUCCESS,\n    USERS_LIST_FAIL,\n    USERS_LIST_RESET,\n    DELETE_USER_REQUEST,\n    DELETE_USER_SUCCESS,\n    DELETE_USER_FAIL,\n    UPDATE_USER_REQUEST,\n    UPDATE_USER_SUCCESS,\n    UPDATE_USER_FAIL,\n    UPDATE_USER_RESET,\n    DELETE_PRODUCT_REQUEST,\n    DELETE_PRODUCT_SUCCESS,\n    DELETE_PRODUCT_FAIL,\n    CREATE_PRODUCT_REQUEST,\n    CREATE_PRODUCT_SUCCESS,\n    CREATE_PRODUCT_FAIL,\n    CREATE_PRODUCT_RESET,\n    UPDATE_PRODUCT_REQUEST,\n    UPDATE_PRODUCT_SUCCESS,\n    UPDATE_PRODUCT_FAIL,\n    UPDATE_PRODUCT_RESET,\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SUCCESS,\n    ORDER_LIST_FAIL,\n    UPDATE_ORDER_TO_DELIVER_REQUEST,\n    UPDATE_ORDER_TO_DELIVER_SUCCESS,\n    UPDATE_ORDER_TO_DELIVER_FAIL,\n    UPDATE_ORDER_TO_DELIVER_RESET,\n    CREATE_PRODUCT_REVIEW_REQUEST,\n    CREATE_PRODUCT_REVIEW_SUCCESS,\n    CREATE_PRODUCT_REVIEW_FAIL,\n    CREATE_PRODUCT_REVIEW_RESET,\n    TOP_PRODUCTS_REQUEST,\n    TOP_PRODUCTS_SUCCESS,\n    TOP_PRODUCTS_FAIL,\n\n} from '../constants/constants';\n\n\n// Post Actions\nexport const listPurchase = () => async (dispatch) =>{\n    try{\n        dispatch({type: PURCHASE_LIST_REQUEST})\n        const { data } =  await axios.get(\"/api/purchases/\");\n        dispatch({\n            type: PURCHASE_LIST_SUCCESS,\n            payload: data\n        })\n    }catch (error) {\n        dispatch({\n            type: PURCHASE_LIST_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message,\n        })\n    }\n}\n\nexport const listProducts = (keyword = '') => async (dispatch) =>{\n    try{\n        dispatch({type: PRODUCTS_LIST_REQUEST})\n        const { data } =  await axios.get(`/api/products${keyword}`);\n        dispatch({\n            type: PRODUCTS_LIST_SUCCESS,\n            payload: data\n        })\n    }catch (error) {\n        dispatch({\n            type: PRODUCTS_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n            ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const listProductDetails = (id) => async (dispatch) =>{\n    try{\n        dispatch({type: PRODUCTS_DETAILS_REQUEST})\n        const { data } =  await axios.get(`/api/products/${id}`);\n        dispatch({\n            type: PRODUCTS_DETAILS_SUCCESS,\n            payload: data\n        })\n    }catch (error) {\n        dispatch({\n            type: PRODUCTS_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n// CART ACTIONS\nexport const addToCart = (id, qty, delivery, week, period_price) => async (dispatch, getState) =>{\n    const { data } = await axios.get(`/api/products/${id}`)\n\n    dispatch({\n        type: ADD_CART_ITEM,\n        payload: {\n            product: data._id,\n            name: data.name,\n            image: data.image,\n            price: data.price,\n            countInStock: data.countInStock,\n            qty,\n            delivery,\n            week,\n            period_price\n        }\n    })\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const removeCartItem = (id) => async (dispatch, getState) =>{\n    dispatch({\n        type: REMOVE_CART_ITEM,\n        payload: id\n    })\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\n// USER ACTIONS\nexport const login = (email, password) => async (dispatch) =>{\n    try{\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/users/login/',\n            { 'username': email, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    }catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const register = (name, email, password) => async (dispatch) =>{\n    try{\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        })\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/users/register/',\n            { 'name': name, 'email': email, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    }catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const getUserDetails = (id) => async (dispatch, getState) =>{\n    try{\n        dispatch({\n            type: USER_DETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(`/api/users/${id}/`, config)\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    }catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const updateUserProfile = (user) => async (dispatch, getState) =>{\n    try{\n        dispatch({\n            type: USER_UPDATE_PROFILE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(`/api/users/profile/update/`,user,config)\n\n        dispatch({\n            type: USER_UPDATE_PROFILE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    }catch (error) {\n        dispatch({\n            type: USER_UPDATE_PROFILE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo')\n    dispatch({ type: USER_LOGOUT })\n    dispatch({ type: USER_DETAILS_RESET })\n    dispatch({ type: LIST_MY_ORDERS_RESET })\n    dispatch({ type: USERS_LIST_RESET })\n\n    ///\n    dispatch({ type: UPDATE_ORDER_TO_DELIVER_RESET })\n    dispatch({ type: LIST_MY_ORDERS_RESET })\n\n}\n\n\n// CUSTOMER ORDER DETAILS\nexport const saveShippingAddress = (data) => async (dispatch) =>{\n    dispatch({\n        type: ADD_CART_SHIPPING_ADDRESS,\n        payload: data\n    })\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\n}\n\nexport const savePaymentMethod = (data) => async (dispatch) =>{\n    dispatch({\n        type: SAVE_CART_PAYMENT_METHOD,\n        payload: data\n    })\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\n}\n\n// CREATING ORDER\nexport const createdOrders = (order) => async (dispatch, getState) =>{\n    try{\n        dispatch({\n            type: CREATE_ORDER_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(`/api/order/add/`,order,config)\n\n        dispatch({\n            type: CREATE_ORDER_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: CART_CLEAR_ITEM,\n            payload: data\n        })\n        localStorage.removeItem('cartItems')\n\n    }catch (error) {\n        dispatch({\n            type: CREATE_ORDER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const getOrderDetails = (id) => async (dispatch, getState) =>{\n    try{\n        dispatch({\n            type: ORDER_DETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(`/api/order/${id}`,config)\n\n        dispatch({\n            type: ORDER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    }catch (error) {\n        dispatch({\n            type: ORDER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const updateOrderToPay = (id, paymentResult) => async (dispatch, getState) =>{\n    try{\n        dispatch({\n            type: UPDATE_ORDER_TO_PAY_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(`/api/order/${id}/pay/`,paymentResult, config)\n\n        dispatch({\n            type: UPDATE_ORDER_TO_PAY_SUCCESS,\n            payload: data\n        })\n\n\n    }catch (error) {\n        dispatch({\n            type: UPDATE_ORDER_TO_PAY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const updateOrderToDeliver = (order) => async (dispatch, getState) =>{\n    try{\n        dispatch({\n            type: UPDATE_ORDER_TO_DELIVER_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(`/api/order/${order._id}/deliver/`, order, config)\n\n        dispatch({\n            type: UPDATE_ORDER_TO_DELIVER_SUCCESS,\n            payload: data\n        })\n\n\n    }catch (error) {\n        dispatch({\n            type: UPDATE_ORDER_TO_DELIVER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const getMyOrdersList = () => async (dispatch, getState) =>{\n    try{\n        dispatch({\n            type: LIST_MY_ORDERS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(`/api/order/myorders/`,config)\n\n        dispatch({\n            type: LIST_MY_ORDERS_SUCCESS,\n            payload: data\n        })\n\n    }catch (error) {\n        dispatch({\n            type: LIST_MY_ORDERS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n// ADMIN ACTIONS\nexport const getUsersList = () => async (dispatch, getState) =>{\n    try{\n        dispatch({\n            type: USERS_LIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(`/api/users/`,config)\n\n        dispatch({\n            type: USERS_LIST_SUCCESS,\n            payload: data\n        })\n\n    }catch (error) {\n        dispatch({\n            type: USERS_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deleteUser = (id) => async (dispatch, getState) =>{\n    try{\n        dispatch({\n            type: DELETE_USER_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(`/api/users/delete/${id}/`,config)\n\n        dispatch({\n            type: DELETE_USER_SUCCESS,\n            payload: data\n        })\n\n    }catch (error) {\n        dispatch({\n            type: DELETE_USER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const updateUser = (user) => async (dispatch, getState) =>{\n    try{\n        dispatch({\n            type: UPDATE_USER_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(`/api/users/update/${user._id}/`, user, config)\n\n        dispatch({\n            type: UPDATE_USER_SUCCESS,\n        })\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    }catch (error) {\n        dispatch({\n            type: UPDATE_USER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const deleteProduct = (id) => async (dispatch, getState) =>{\n    try{\n        dispatch({\n            type: DELETE_PRODUCT_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(`/api/products/delete/${id}/`,config)\n\n        dispatch({\n            type: DELETE_PRODUCT_SUCCESS,\n        })\n\n    }catch (error) {\n        dispatch({\n            type: DELETE_PRODUCT_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const createProduct = () => async (dispatch, getState) =>{\n    try{\n        dispatch({\n            type: CREATE_PRODUCT_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(`/api/products/create/`,{}, config)\n\n        dispatch({\n            type: CREATE_PRODUCT_SUCCESS,\n            payload: data\n        })\n\n    }catch (error) {\n        dispatch({\n            type: CREATE_PRODUCT_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const updateProduct = (product) => async (dispatch, getState) =>{\n    try{\n        dispatch({\n            type: UPDATE_PRODUCT_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(`/api/product/update/${product._id}/`, product, config)\n\n        dispatch({\n            type: UPDATE_PRODUCT_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: PRODUCTS_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    }catch (error) {\n        dispatch({\n            type: UPDATE_PRODUCT_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listOrders = () => async (dispatch, getState) =>{\n    try{\n        dispatch({\n            type: ORDER_LIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(`/api/order/`,config)\n\n        dispatch({\n            type: ORDER_LIST_SUCCESS,\n            payload: data\n        })\n\n    }catch (error) {\n        dispatch({\n            type: ORDER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const createProductReviewAction = (productId, review) => async (dispatch, getState) =>{\n    try{\n        dispatch({\n            type: CREATE_PRODUCT_REVIEW_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(`/api/products/${productId}/reviews/`, review, config)\n\n        dispatch({\n            type: CREATE_PRODUCT_REVIEW_SUCCESS,\n            payload: data\n        })\n\n    }catch (error) {\n        dispatch({\n            type: CREATE_PRODUCT_REVIEW_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const topRatedProductsAction = () => async (dispatch, getState) =>{\n    try{\n        dispatch({\n            type: TOP_PRODUCTS_REQUEST\n        })\n\n        const { data } = await axios.get(`/api/products/top/`)\n\n        dispatch({\n            type: TOP_PRODUCTS_SUCCESS,\n            payload: data\n        })\n\n    }catch (error) {\n        dispatch({\n            type: TOP_PRODUCTS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","/Users/abdulmutallib/Desktop/eAgric/frontend/src/components/Login/Login.js",[],"/Users/abdulmutallib/Desktop/eAgric/frontend/src/container/FormsContainer/FormsContainer.js",[],"/Users/abdulmutallib/Desktop/eAgric/frontend/src/components/UserManagement/PasswordResetRequest/PasswordResetRequest.js",["279","280","281"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\n// import Loader from '../../components/Helpers/Loader/Loader'\n// import Message from '../../components/Helpers/Message/Message'\nimport FormsContainer from \"../../../container/FormsContainer/FormsContainer\";\n// import { login } from '../../actions/actions'\n\nfunction PasswordResetConfirm({  }) {\n    const [email, setEmail] = useState('')\n\n\n    useEffect(() => {\n\n    }, [])\n\n\n    return (\n        <FormsContainer>\n            <h3>Password Reset</h3>\n            <p>Enter you email to request a password reset</p>\n            {/*{error && <Message variant='danger'>{error}</Message>}*/}\n            {/*{loading && <Loader />}*/}\n            <Form >\n\n                <Form.Group controlId='email'>\n                    {/*<Form.Label>Email Address</Form.Label>*/}\n                    <Form.Control\n                        type='email'\n                        placeholder='Enter Email'\n                        required\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n\n                <br />\n                <Button type='submit' variant='primary' style={{ width: \"30%\" }}>\n                    Request reset\n                </Button>\n            </Form>\n\n            <Row className='py-4'>\n                <Col>\n                    <Link\n                        to='/login'>Back to login?\n                    </Link>\n                </Col>\n            </Row>\n\n        </FormsContainer>\n    )\n}\n\nexport default PasswordResetConfirm","/Users/abdulmutallib/Desktop/eAgric/frontend/src/components/Register/Register.js",[],"/Users/abdulmutallib/Desktop/eAgric/frontend/src/components/Profile/Profile.js",["282","283","284","285"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../../components/Helpers/Loader/Loader'\nimport Message from '../../components/Helpers/Message/Message'\nimport FormsContainer from '../../container/FormsContainer/FormsContainer'\nimport {getUserDetails, updateUserProfile, getMyOrdersList} from '../../actions/actions'\nimport { USER_UPDATE_PROFILE_RESET } from \"../../constants/constants\";\n\nfunction Profile({ location, history }) {\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n\n    const orderDetails = useSelector(state => state.orderDetails)\n    const {orderData, orderDetailsError, loadingOrderDetails} = orderDetails\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { error, loading, user } = userDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n    const { success } = userUpdateProfile\n\n    const listMyOrders = useSelector(state => state.listMyOrders)\n    const { loading: loadingCustomerOrders, error: loadingCustomerOrdersError, orders } = listMyOrders\n\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else {\n            if (!user || !user.name || success || userInfo._id !== user._id) {\n                dispatch({type: USER_UPDATE_PROFILE_RESET})\n                dispatch(getUserDetails('profile'))\n                dispatch(getMyOrdersList())\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n            }\n        }\n    }, [dispatch, history, userInfo, user, success, orderData])\n\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        if (password !== confirmPassword){\n            setMessage(\"Passwords entered do not match\")\n        }else {\n            dispatch(updateUserProfile({\n                'id': user._id,\n                'name': name,\n                'email': email,\n                'password': password\n            }))\n            setMessage('')\n        }\n\n    }\n\n\n    return (\n        <Row>\n            <Col md={3}>\n                <h3>User Profile</h3>\n                <p className='alert-info' style={{\n                    padding: '10px'\n                }}>Update your profile by altering any field and then click on \"Update\"</p>\n                {message &&  <Message variant='danger'>{message}</Message>}\n                {error && <Message variant='danger'>{error}</Message>}\n                {loading && <Loader />}\n                <Form onSubmit={submitHandler}>\n\n                    <Form.Group controlId='name'>\n                        {/*<Form.Label>Email Address</Form.Label>*/}\n                        <Form.Control\n                            type='text'\n                            placeholder='Full name'\n                            required\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <br/>\n\n                    <Form.Group controlId='email'>\n                        {/*<Form.Label>Email Address</Form.Label>*/}\n                        <Form.Control\n                            type='email'\n                            placeholder='Email'\n                            required\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <br/>\n\n                    <Form.Group controlId='password'>\n                        {/*<Form.Label>Password</Form.Label>*/}\n                        <Form.Control\n                            type='password'\n                            placeholder='Enter Password'\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <br />\n\n                    <Form.Group controlId='passwordConfirm'>\n                        {/*<Form.Label>Password</Form.Label>*/}\n                        <Form.Control\n                            type='password'\n                            placeholder='Confirm Password'\n                            value={confirmPassword}\n                            onChange={(e) => setConfirmPassword(e.target.value)}>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <br />\n                    <Button type='submit' variant='primary' style={{ width: \"100%\" }}>\n                        Update\n                    </Button>\n                </Form>\n            </Col>\n\n            <Col md={9}>\n                <h3>Orders and Subscriptions</h3>\n                {loadingCustomerOrders ? (\n                    <Loader />\n                ) : loadingCustomerOrdersError ? (<Message variant='danger'>{loadingCustomerOrdersError}</Message>\n                ) : (\n                    <Table striped responsive className='table-sm'>\n                        <thead>\n                            <tr>\n                                {/*<th>ID</th>*/}\n                                <th>Date</th>\n                                <th>Total Price</th>\n                                <th>Payment Status</th>\n                                <th>Type of Order</th>\n                                <th>Details</th>\n                                <th></th>\n\n                            </tr>\n                        </thead>\n\n                        <tbody>\n                            {orders.map(order => (\n                                <tr key={order._id}>\n                                    {/*<td>{order._id}</td>*/}\n                                    <td>{order.createdAt.substring(0, 10)}</td>\n                                    <td>₦{order.totalPrice.substring(0, 10)}</td>\n                                    <td>{order.isPaid ? 'Paid on ' + order.paidAt.substring(0, 10) : (\n                                        <i className='fas fa-times' style={{color: \"red\"}}></i>\n                                    )}</td>\n                                    {order.orderItems.map(r =>(\n                                        <td>{r.purchaseTo}</td>\n                                    ))}\n                                    <td>\n                                        <LinkContainer to={`order/${order._id}`}>\n                                            <Button className='btn-sm'>\n                                                Details\n                                            </Button>\n                                        </LinkContainer>\n                                    </td>\n\n                                </tr>\n                            ))}\n                        </tbody>\n\n                    </Table>\n                )}\n            </Col>\n        </Row>\n    )\n}\n\nexport default Profile","/Users/abdulmutallib/Desktop/eAgric/frontend/src/components/Shipping/Shipping.js",["286","287","288"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../../components/Helpers/Loader/Loader'\nimport Message from '../../components/Helpers/Message/Message'\nimport FormsContainer from '../../container/FormsContainer/FormsContainer'\nimport { saveShippingAddress } from '../../actions/actions'\nimport CheckOutSteps from \"../../container/CheckOutSteps/CheckOutSteps\";\nimport 'react-step-progress/dist/index.css'\n\n\nfunction Register({ location, history }) {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const [address, setAddress] = useState(shippingAddress.address)\n    const [city, setCity] = useState(shippingAddress.city)\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\n    const [country, setCountry] = useState(shippingAddress.country)\n    const [phone, setPhone] = useState(shippingAddress.phone)\n\n    const dispatch = useDispatch()\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    const userRegister = useSelector(state => state.userRegister)\n    const { error, loading, userInfo } = userRegister\n\n    useEffect(() => {\n\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        dispatch(saveShippingAddress({\n            address,\n            city,\n            postalCode,\n            country,\n            phone\n        }))\n\n        history.push('/payment')\n    }\n\n    return (\n        <FormsContainer>\n            <CheckOutSteps step1 step2 />\n            <h3>Customer Shipping Information</h3>\n            <br />\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='address'>\n                    {/*<Form.Label>Email Address</Form.Label>*/}\n                    <Form.Control\n                        type='text'\n                        placeholder='Enter address'\n                        required\n                        value={address ? address : ''}\n                        onChange={(e) => setAddress(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n\n                <br/>\n\n                <Form.Group controlId='city'>\n                    {/*<Form.Label>Email Address</Form.Label>*/}\n                    <Form.Control\n                        type='text'\n                        placeholder='Enter city'\n                        required\n                        value={city ? city : ''}\n                        onChange={(e) => setCity(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n\n                <br/>\n\n                <Form.Group controlId='postalCode'>\n                    {/*<Form.Label>Email Address</Form.Label>*/}\n                    <Form.Control\n                        type='text'\n                        placeholder='Enter postal code'\n                        required\n                        value={postalCode ? postalCode : ''}\n                        onChange={(e) => setPostalCode(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n\n                <br />\n\n                <Form.Group controlId='country'>\n                    {/*<Form.Label>Email Address</Form.Label>*/}\n                    <Form.Control\n                        type='text'\n                        placeholder='Enter country'\n                        required\n                        value={country ? country : ''}\n                        onChange={(e) => setCountry(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n\n                <br />\n\n                <Form.Group controlId='phone'>\n                    {/*<Form.Label>Email Address</Form.Label>*/}\n                    <Form.Control\n                        type='text'\n                        placeholder='Enter phone number'\n                        required\n                        value={phone ? phone : ''}\n                        onChange={(e) => setPhone(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n\n                <br />\n                <Button type='submit' variant='primary'>\n                    Continue\n                </Button>\n            </Form>\n\n        </FormsContainer>\n\n\n    )\n}\n\nexport default Register","/Users/abdulmutallib/Desktop/eAgric/frontend/src/container/CheckOutSteps/CheckOutSteps.js",["289"],"import React from \"react\";\nimport {Nav} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\nimport { LinkContainer } from 'react-router-bootstrap'\n\nfunction CheckOutSteps({ step1, step2, step3, step4 }) {\n    return(\n        <Nav className='justify-content-md-start mb-3'>\n            <Nav.Item>\n\n                {step1 ? (\n                    <LinkContainer to='/login'>\n                        <Nav.Link>Login</Nav.Link>\n                    </LinkContainer>\n                ) : (\n                    <Nav.Link disabled>Login</Nav.Link>\n                )}\n            </Nav.Item>\n\n            <Nav.Item>\n                {step2 ? (\n                    <LinkContainer to='/shipping'>\n                        <Nav.Link>Shipping</Nav.Link>\n                    </LinkContainer>\n                ) : (\n                    <Nav.Link disabled>Shipping</Nav.Link>\n                )}\n\n            </Nav.Item>\n\n            <Nav.Item>\n                {step3 ? (\n                    <LinkContainer to='/payment'>\n                        <Nav.Link>Payment</Nav.Link>\n                    </LinkContainer>\n                ) : (\n                    <Nav.Link disabled>Payment</Nav.Link>\n                )}\n            </Nav.Item>\n\n            <Nav.Item>\n                {step4 ? (\n                    <LinkContainer to='/placeorder'>\n                        <Nav.Link>Place Order</Nav.Link>\n                    </LinkContainer>\n                ) : (\n                    <Nav.Link disabled>Place Order</Nav.Link>\n                )}\n            </Nav.Item>\n\n        </Nav>\n    )\n}\n\nexport default CheckOutSteps","/Users/abdulmutallib/Desktop/eAgric/frontend/src/components/Payment/Payment.js",["290","291","292","293"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../../components/Helpers/Loader/Loader'\nimport Message from '../../components/Helpers/Message/Message'\nimport FormsContainer from '../../container/FormsContainer/FormsContainer'\nimport { savePaymentMethod } from '../../actions/actions'\nimport CheckOutSteps from \"../../container/CheckOutSteps/CheckOutSteps\";\nimport 'react-step-progress/dist/index.css'\n\n\nfunction Payment({ location, history }) {\n    const [paymentMethod, setPaymentMethod] = useState('Flutterwave')\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const dispatch = useDispatch()\n\n    if (!shippingAddress.address){\n        history.push('/shipping')\n    }\n\n    useEffect(() => {\n\n    }, [history])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        dispatch(savePaymentMethod(paymentMethod))\n        history.push('/placeorder')\n    }\n\n    return (\n        <FormsContainer>\n            <CheckOutSteps step1 step2 step3 />\n\n            <Form onSubmit={submitHandler}>\n                <Form.Group>\n                    <Form.Label as='legend'>Select Method</Form.Label>\n                    <Col>\n                        <Form.Check\n                            type='radio'\n                            label='Flutterwave'\n                            id='flutterwave'\n                            name='paymentMethod'\n                            checked\n                            onChange={(e) => setPaymentMethod(e.target.value)}>\n                        </Form.Check>\n                    </Col>\n                    {/*<Col>*/}\n                    {/*    <Form.Check*/}\n                    {/*        type='radio'*/}\n                    {/*        label='PayPal or Credit Card'*/}\n                    {/*        id='paypal'*/}\n                    {/*        name='paymentMethod'*/}\n                    {/*        onChange={(e) => setPaymentMethod(e.target.value)}>*/}\n                    {/*    </Form.Check>*/}\n                    {/*</Col>*/}\n                </Form.Group>\n\n                <br/>\n\n                <Button type='submit' variant='primary'>\n                    Continue\n                </Button>\n            </Form>\n        </FormsContainer>\n    )\n}\n\nexport default Payment","/Users/abdulmutallib/Desktop/eAgric/frontend/src/components/PlaceOrder/PlaceOrder.js",["294","295","296","297","298","299","300"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport {Button, Row, Col, ListGroup, Image, Card} from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../../components/Helpers/Loader/Loader'\nimport Message from '../../components/Helpers/Message/Message'\nimport FormsContainer from '../../container/FormsContainer/FormsContainer'\nimport { createdOrders } from '../../actions/actions'\nimport CheckOutSteps from \"../../container/CheckOutSteps/CheckOutSteps\";\nimport {CREATE_ORDER_RESET} from \"../../constants/constants\";\n\n\nfunction PlaceOrder({ history }) {\n    const dispatch = useDispatch()\n\n   const cart = useSelector(state => state.cart)\n    const createOrder = useSelector(state => state.createOrder)\n    const {order, error, success} = createOrder\n\n    // CHECKING AND CALCULATING PERIOD PRICE IF IS FOR RARING, ELSE ITS ASSIGNED DEFAULT DELIVERY FEE FOR DELIVERY\n    const raringPrice = Number(cart.cartItems.reduce((acc, item) => acc + Number(item.period_price > 0 ? item.period_price : 0 ) + 0, 0)).toFixed(2)\n\n    // CHECKING IS THE ITEM IS REQUESTED FOR DELIVERY\n    const isDelivery = cart.cartItems.some(r => r.delivery === 'Deliver')\n    const deliveryPrice = Number(isDelivery == true ? 500 : 0).toFixed(2)\n\n\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\n    cart.taxPrice = Number((0.75 ) *  cart.itemsPrice ).toFixed(2)// Review this method\n    // cart.shippingPrice = periodPrice == 0 ? periodPrice : 300 // Check if PeriodPrice has positive number make  shipping/raring fee, else assigned default delivery price of 2000\n    cart.shippingPrice = raringPrice // Check if PeriodPrice has positive number make  shipping/raring fee, else assigned default delivery price of 2000\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(deliveryPrice) + Number(cart.taxPrice)).toFixed(2) // Review this method\n\n\n    // CHECK IF THE DELIVERY MODE IS RARE\n    const isRare = cart.cartItems.reduce((acc, item) => acc + item.delivery,\"\").trim()\n\n    console.log(\"isDelivery:\", isDelivery)\n    console.log(\"Delivery price:\", deliveryPrice)\n    console.log(\"Raring price:\", raringPrice)\n    console.log(\"Method of purchase:\",isRare )\n    console.log(\"Cart Items: \", cart.cartItems)\n\n\n    if (!cart.paymentMethod){\n        history.push('/payment')\n    }\n\n    useEffect(() => {\n        if (success){\n            history.push(`/order/${order._id}`)\n            dispatch({type: CREATE_ORDER_RESET})\n        }\n    }, [success, history])\n\n\n    const placeOrderHandler = () => {\n        dispatch(createdOrders({\n            orderItems: cart.cartItems,\n            shippingAddress: cart.shippingAddress,\n            paymentMethod: cart.paymentMethod,\n            itemsPrice: cart.itemsPrice,\n            /// shippingPrice: cart.shippingPrice,\n            shippingPrice: deliveryPrice,\n            taxPrice: cart.taxPrice,\n            totalPrice: cart.totalPrice,\n            raringPrice: raringPrice\n        }))\n    }\n\n    return(\n        <div>\n            <CheckOutSteps step1 step2 step3 step4 />\n            <Row>\n                <Col md={8}>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h3>Customer's Address</h3>\n                            <p>\n                                {cart.shippingAddress.address}, {' '}\n                                {cart.shippingAddress.country}, {' '}\n                                {cart.shippingAddress.postalCode}, {' '}\n                                {cart.shippingAddress.phone}\n\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h3>Payment Gateway</h3>\n                            <p>\n                                {cart.paymentMethod}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h3>Order Items</h3>\n                            <p>\n                                {cart.cartItems.length === 0 ? <Message variant='info'>Your basket is empty!</Message> :(\n                                    <ListGroup variant='flush'>\n                                        {cart.cartItems.map((item, index) =>(\n                                            <ListGroup.Item key={index}>\n                                                <Row>\n                                                    <Col md={1}>\n                                                        <Image src={item.image} alt={item.name} fluid rounded />\n                                                    </Col>\n\n                                                    <Col>\n                                                        <Link to={`/product/${item.product}`} >{item.name}</Link>\n                                                    </Col>\n\n                                                    <Col md={4}>\n                                                        {item.qty} x ₦{item.price} = ₦{(item.qty * item.price).toFixed(2)}\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n                                        ))}\n\n                                    </ListGroup>\n                                )}\n                            </p>\n                        </ListGroup.Item>\n                    </ListGroup>\n                </Col>\n\n                <Col md={4}>\n                    <Card>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h3>Order Summary</h3>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <Row>\n                                <Col>Items:</Col>\n                                <Col>₦{cart.itemsPrice}</Col>\n                            </Row>\n                        </ListGroup.Item>\n                        {/*|| raringPrice == 0*/}\n                        <ListGroup.Item hidden={isRare === 'Deliver' }>\n                            <Row hidden={isRare === 'Deliver'}>\n                                <Col hidden={isRare === 'Deliver'}>Raring fees:</Col>\n                                <Col hidden={isRare === 'Deliver'}>₦{cart.shippingPrice}</Col>\n                            </Row>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item hidden={cart.delivery === 'Deliver' || deliveryPrice == 0}>\n                            <Row hidden={cart.delivery === 'Deliver' || deliveryPrice == 0}>\n                                <Col hidden={cart.delivery === 'Deliver'}>Delivery fees:</Col>\n                                <Col hidden={cart.delivery === 'Deliver'}>₦{deliveryPrice}</Col>\n                            </Row>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <Row>\n                                <Col>Tax:</Col>\n                                <Col>₦{cart.taxPrice}</Col>\n                            </Row>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <Row>\n                                <Col>Grand Total:</Col>\n                                <Col>₦{cart.totalPrice}</Col>\n                            </Row>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            {error && <Message variant='danger'>{error}</Message>}\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <Button type='submit'\n                                    variant='primary'\n                                    style={{ width: \"100%\" }}\n                                    className='btn-block' disabled={cart.cartItems === 0} onClick={placeOrderHandler}>\n                                Place Order Now\n                            </Button>\n                        </ListGroup.Item>\n\n                    </ListGroup>\n                    </Card>\n                </Col>\n            </Row>\n\n        </div>\n    )\n}\n\nexport default PlaceOrder\n\n\n// import React, { useState, useEffect } from 'react'\n// import { Link } from 'react-router-dom'\n// import {Button, Row, Col, ListGroup, Image, Card} from 'react-bootstrap'\n// import { useDispatch, useSelector } from 'react-redux'\n// import Loader from '../../components/Helpers/Loader/Loader'\n// import Message from '../../components/Helpers/Message/Message'\n// import FormsContainer from '../../container/FormsContainer/FormsContainer'\n// import { createdOrders } from '../../actions/actions'\n// import CheckOutSteps from \"../../container/CheckOutSteps/CheckOutSteps\";\n// import {CREATE_ORDER_RESET} from \"../../constants/constants\";\n//\n//\n// function PlaceOrder({ history }) {\n//     const dispatch = useDispatch()\n//\n//     const cart = useSelector(state => state.cart)\n//     const createOrder = useSelector(state => state.createOrder)\n//     const {order, error, success} = createOrder\n//\n//     cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\n//     cart.shippingPrice = (cart.itemsPrice > 100 ? 0  :  2000).toFixed(2) // Review this method\n//     cart.taxPrice = Number((0.082 ) *  cart.itemsPrice ).toFixed(2)// Review this method\n//     cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2) // Review this method\n//\n//     if (!cart.paymentMethod){\n//         history.push('/payment')\n//     }\n//\n//     useEffect(() => {\n//         if (success){\n//             history.push(`/order/${order._id}`)\n//             dispatch({type: CREATE_ORDER_RESET})\n//         }\n//     }, [success, history])\n//\n//\n//     const placeOrderHandler = () => {\n//         dispatch(createdOrders({\n//             orderItems: cart.cartItems,\n//             shippingAddress: cart.shippingAddress,\n//             paymentMethod: cart.paymentMethod,\n//             itemsPrice: cart.itemsPrice,\n//             shippingPrice: cart.shippingPrice,\n//             taxPrice: cart.taxPrice,\n//             totalPrice: cart.totalPrice,\n//         }))\n//     }\n//\n//     return(\n//         <div>\n//             <CheckOutSteps step1 step2 step3 step4 />\n//             <Row>\n//                 <Col md={8}>\n//                     <ListGroup variant='flush'>\n//                         <ListGroup.Item>\n//                             <h3>Customer's Address</h3>\n//                             <p>\n//                                 {cart.shippingAddress.address}, {' '}\n//                                 {cart.shippingAddress.country}, {' '}\n//                                 {cart.shippingAddress.postalCode}, {' '}\n//                                 {cart.shippingAddress.phone}\n//\n//                             </p>\n//                         </ListGroup.Item>\n//\n//                         <ListGroup.Item>\n//                             <h3>Payment Gateway</h3>\n//                             <p>\n//                                 {cart.paymentMethod}\n//                             </p>\n//                         </ListGroup.Item>\n//\n//                         <ListGroup.Item>\n//                             <h3>Order Items</h3>\n//                             <p>\n//                                 {cart.cartItems.length === 0 ? <Message variant='info'>Your basket is empty!</Message> :(\n//                                     <ListGroup variant='flush'>\n//                                         {cart.cartItems.map((item, index) =>(\n//                                             <ListGroup.Item key={index}>\n//                                                 <Row>\n//                                                     <Col md={1}>\n//                                                         <Image src={item.image} alt={item.name} fluid rounded />\n//                                                     </Col>\n//\n//                                                     <Col>\n//                                                         <Link to={`/product/${item.product}`} >{item.name}</Link>\n//                                                     </Col>\n//\n//                                                     <Col md={4}>\n//                                                         {item.qty} x ₦{item.price} = ₦{(item.qty * item.price).toFixed(2)}\n//                                                     </Col>\n//                                                 </Row>\n//                                             </ListGroup.Item>\n//                                         ))}\n//\n//                                     </ListGroup>\n//                                 )}\n//                             </p>\n//                         </ListGroup.Item>\n//                     </ListGroup>\n//                 </Col>\n//\n//                 <Col md={4}>\n//                     <Card>\n//                         <ListGroup variant='flush'>\n//                             <ListGroup.Item>\n//                                 <h3>Order Summary</h3>\n//                             </ListGroup.Item>\n//\n//                             <ListGroup.Item>\n//                                 <Row>\n//                                     <Col>Items:</Col>\n//                                     <Col>${cart.itemsPrice}</Col>\n//                                 </Row>\n//                             </ListGroup.Item>\n//\n//                             <ListGroup.Item>\n//                                 <Row>\n//                                     <Col>Shipping Fees:</Col>\n//                                     <Col>${cart.shippingPrice}</Col>\n//                                 </Row>\n//                             </ListGroup.Item>\n//\n//                             <ListGroup.Item>\n//                                 <Row>\n//                                     <Col>Tax:</Col>\n//                                     <Col>${cart.taxPrice}</Col>\n//                                 </Row>\n//                             </ListGroup.Item>\n//\n//                             <ListGroup.Item>\n//                                 <Row>\n//                                     <Col>Grand Total:</Col>\n//                                     <Col>${cart.totalPrice}</Col>\n//                                 </Row>\n//                             </ListGroup.Item>\n//\n//                             <ListGroup.Item>\n//                                 {error && <Message variant='danger'>{error}</Message>}\n//                             </ListGroup.Item>\n//\n//                             <ListGroup.Item>\n//                                 <Button type='submit'\n//                                         variant='primary'\n//                                         style={{ width: \"100%\" }}\n//                                         className='btn-block' disabled={cart.cartItems === 0} onClick={placeOrderHandler}>\n//                                     Place Order Now\n//                                 </Button>\n//                             </ListGroup.Item>\n//\n//                         </ListGroup>\n//                     </Card>\n//                 </Col>\n//             </Row>\n//\n//         </div>\n//     )\n// }\n//\n// export default PlaceOrder","/Users/abdulmutallib/Desktop/eAgric/frontend/src/components/Order/Order.js",["301","302","303","304","305","306","307","308","309","310","311","312"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport {Button, Row, Col, ListGroup, Image, Card} from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../../components/Helpers/Loader/Loader'\nimport Message from '../../components/Helpers/Message/Message'\nimport FormsContainer from '../../container/FormsContainer/FormsContainer'\nimport { getOrderDetails, updateOrderToPay, updateOrderToDeliver } from '../../actions/actions'\nimport {PayPalButton} from \"react-paypal-button-v2\";\nimport { useHistory } from \"react-router-dom\";\n\nimport {\n    UPDATE_ORDER_TO_PAY_RESET,\n    UPDATE_ORDER_TO_DELIVER_RESET,\n    LIST_MY_ORDERS_RESET\n} from \"../../constants/constants\";\nimport { useFlutterwave, closePaymentModal } from 'flutterwave-react-v3';\n\n\nfunction Order({ match }) {\n    const order_id  = match.params.id\n\n    const history = useHistory();\n\n    const dispatch = useDispatch()\n    const [price, setPrice] = useState(0)\n    const [phonenumber, setPhoneNumber] = useState(0)\n\n\n    const orderDetails = useSelector(state => state.orderDetails)\n    const {order, error, loading} = orderDetails\n\n    const orderPay = useSelector(state => state.orderPay)\n    const { loading: loadingPay, success: successPay} = orderPay\n\n    const orderToDeliverS = useSelector(state => state.orderToDeliverS)\n    const { loading: loadingDeliver, success: successDeliver} = orderToDeliverS\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    console.log(phonenumber)\n\n    const config = {\n        public_key: 'FLWPUBK_TEST-7d051a27845f047b9657ea5edefc33ea-X',\n        tx_ref: Date.now(),\n        amount: price,\n        currency: 'NGN',\n        payment_options: 'card,mobilemoney,ussd',\n        customer: {\n            email: userInfo.email,\n            phonenumber: phonenumber,\n            name: userInfo.name,\n        },\n        customizations: {\n            title: 'Aikinyi Limited',\n            description: 'Post Payment',\n            logo: 'https://st2.depositphotos.com/4403291/7418/v/450/depositphotos_74189661-stock-illustration-online-shop-log.jpg',\n        },\n    };\n\n    const handleFlutterPayment = useFlutterwave(config);\n    // console.log(\"raringPrice:\", order.raringPrice)\n    // console.log(\"shippingPrice:\", order.shippingPrice)\n\n    if (!loading && ! error){\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\n    }\n\n    console.log(\"Order Items\", order)\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        }\n\n        //   else if (!order || successPay || order._id !== Number(order_id) || successDeliver)\n        else if (!order || successPay || order._id !== order_id || successDeliver){\n            dispatch({type: UPDATE_ORDER_TO_PAY_RESET})\n            dispatch({type: UPDATE_ORDER_TO_DELIVER_RESET})\n            dispatch(getOrderDetails(order_id))\n        }else{\n            setPrice(order.totalPrice)\n            setPhoneNumber(order.shippingAddress.phone)\n        }\n    }, [dispatch,order, order_id, successPay, successDeliver, userInfo], history)\n\n    const successfulPaymentHandler = (paymentResult) => {\n        dispatch(updateOrderToPay(order_id, paymentResult))\n    }\n\n    const orderDeliveredHandler = () => {\n        dispatch(updateOrderToDeliver(order))\n\n    }\n\n    return loading ? (\n        <Loader>{error}</Loader>\n    ) : error ? (\n        <Message variant='danger'>{error}</Message>\n\n    ) : (\n        <div>\n\n            <Row>\n                <Col md={8}>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h3>Customer's Address</h3>\n                            <p><strong>{order.user.name}</strong></p>\n                            <p><strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></strong></p>\n                            <p>\n                                {order.shippingAddress.address}, {' '}\n                                {order.shippingAddress.country}, {' '}\n                                {order.shippingAddress.postalCode}, {' '}\n                                {order.shippingAddress.phone}\n                            </p>\n\n                            {order.isDelivered ? (\n                                <Message variant='success'>Order was delivered on {order.deliveredAt.substring(0, 10)}</Message>\n                            ): (\n                                <Message variant='warning'>Order is not delivered yet</Message>\n                            )}\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h3>Payment Gateway</h3>\n                            <p>\n                                {order.paymentMethod}\n                            </p>\n\n                            {order.isPaid ? (\n                                <Message variant='success'>Order was paid on {order.paidAt.substring(0, 10)}</Message>\n                            ): (\n                                <Message variant='warning'>Order not paid</Message>\n                            )}\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h3>Order Items</h3>\n                            <p>\n                                {order.orderItems.length === 0 ? <Message variant='info'>Your basket is empty!</Message> :(\n                                    <ListGroup variant='flush'>\n                                        {order.orderItems.map((item, index) =>(\n                                            <ListGroup.Item key={index}>\n                                                <Row>\n                                                    <Col md={1}>\n                                                        <Image src={item.image} alt={item.name} fluid rounded />\n                                                    </Col>\n\n                                                    <Col>\n                                                        <Link to={`/product/${item.product}`} >{item.name}</Link>\n                                                    </Col>\n\n                                                    <Col md={4}>\n                                                        {item.qty} x ₦{item.price} = ₦{(item.qty * item.price).toFixed(2)}\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n                                        ))}\n\n                                    </ListGroup>\n                                )}\n                            </p>\n                        </ListGroup.Item>\n                    </ListGroup>\n                </Col>\n\n                <Col md={4}>\n                    <Card>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <h3>Order Summary</h3>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Items:</Col>\n                                    <Col>₦{order.itemsPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item hidden={order.raringPrice == 0}>\n                                <Row hidden={order.raringPrice == 0}>\n                                    <Col hidden={order.raringPrice == 0}>Raring Fees:</Col>\n                                    <Col hidden={order.raringPrice == 0}>₦{order.raringPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item hidden={order.shippingPrice == 0}>\n                                <Row hidden={order.shippingPrice == 0}>\n                                    <Col hidden={order.shippingPrice == 0}>Shipping Fees:</Col>\n                                    <Col hidden={order.shippingPrice == 0}>₦{order.shippingPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Tax:</Col>\n                                    <Col>₦{order.taxPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Grand Total:</Col>\n                                    <Col>₦{order.totalPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            {!order.isPaid && (\n                                <ListGroup.Item>\n                                    {loadingPay && <Loader />}\n\n                                        <Button\n                                            style={{ width: '100%' }}\n                                            className='btn btn-block'\n                                            type='button'\n                                            onClick={() => {\n                                                handleFlutterPayment({\n                                                    callback: (response) => {\n                                                        console.log(response);\n                                                        successfulPaymentHandler()\n                                                        closePaymentModal() // this will close the modal programmatically\n                                                    },\n                                                    onClose: () => {},\n                                                });\n                                            }}>\n                                            Pay Now\n                                        </Button>\n\n                                </ListGroup.Item>\n                            )}\n\n                        </ListGroup>\n\n                        {loadingDeliver && <Loader />}\n                        {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\n                            <ListGroup.Item>\n                                <Button\n                                    className='btn btn-block'\n                                    type='button'\n                                    onClick={orderDeliveredHandler}\n                                    style={{ width: '100%' }}>\n                                    Mark as Delivered or Processed\n                                </Button>\n                            </ListGroup.Item>\n                        )}\n                    </Card>\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default Order\n\n\n\n\n// import React, { useState, useEffect } from 'react'\n// import { Link } from 'react-router-dom'\n// import {Button, Row, Col, ListGroup, Image, Card} from 'react-bootstrap'\n// import { useDispatch, useSelector } from 'react-redux'\n// import Loader from '../../components/Helpers/Loader/Loader'\n// import Message from '../../components/Helpers/Message/Message'\n// import FormsContainer from '../../container/FormsContainer/FormsContainer'\n// import { getOrderDetails, updateOrderToPay, updateOrderToDeliver } from '../../actions/actions'\n// import {PayPalButton} from \"react-paypal-button-v2\";\n// import { UPDATE_ORDER_TO_PAY_RESET, UPDATE_ORDER_TO_DELIVER_RESET } from \"../../constants/constants\";\n//\n//\n// function Order({ match }) {\n//     const order_id  = match.params.id\n//\n//\n//     const dispatch = useDispatch()\n//     const [sdkReady,setSdkReady] = useState(false)\n//\n//\n//     const orderDetails = useSelector(state => state.orderDetails)\n//     const {order, error, loading} = orderDetails\n//\n//     const orderPay = useSelector(state => state.orderPay)\n//     const { loading: loadingPay, success: successPay} = orderPay\n//\n//     const orderToDeliverS = useSelector(state => state.orderToDeliverS)\n//     const { loading: loadingDeliver, success: successDeliver} = orderToDeliverS\n//\n//     const userLogin = useSelector(state => state.userLogin)\n//     const { userInfo } = userLogin\n//\n//\n//     if (!loading && ! error){\n//         order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\n//     }\n//\n//     const addPayPalScript = () =>{\n//         const script = document.createElement('script')\n//         script.type = 'text/javascript'\n//         script.src = 'https://www.paypal.com/sdk/js?client-id=AUsUT4wZFhXBIhU_rp0PmuwP3mm_EduviJDT-RQlIQmx1L_-2ZOLnZfHGo5U9ChFAWBZtRzjR7ihQ-am'\n//         script.async = true\n//         script.onload = () =>{\n//             setSdkReady(true)\n//         }\n//         document.body.appendChild(script)\n//     }\n//\n//     useEffect(() => {\n//\n//         if (!order || successPay || order._id !== Number(order_id) || successDeliver){\n//             dispatch({type: UPDATE_ORDER_TO_PAY_RESET})\n//             dispatch({type: UPDATE_ORDER_TO_DELIVER_RESET})\n//             dispatch(getOrderDetails(order_id))\n//         }else if (!order.isPaid){\n//             if (!window.paypal){\n//                 addPayPalScript()\n//             }else {\n//                 setSdkReady(true)\n//             }\n//\n//         }\n//     }, [dispatch,order, order_id, successPay, successDeliver])\n//\n//     const successfulPaymentHandler = (paymentResult) => {\n//         dispatch(updateOrderToPay(order_id, paymentResult))\n//     }\n//\n//     const orderDeliveredHandler = () => {\n//         dispatch(updateOrderToDeliver(order))\n//\n//     }\n//\n//     return loading ? (\n//         <Loader>{error}</Loader>\n//     ) : error ? (\n//         <Message variant='danger'>{error}</Message>\n//\n//     ) : (\n//         <div>\n//\n//             <Row>\n//                 <Col md={8}>\n//                     <ListGroup variant='flush'>\n//                         <ListGroup.Item>\n//                             <h3>Customer's Address</h3>\n//                             <p><strong>{order.user.name}</strong></p>\n//                             <p><strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></strong></p>\n//                             <p>\n//                                 {order.shippingAddress.address}, {' '}\n//                                 {order.shippingAddress.country}, {' '}\n//                                 {order.shippingAddress.postalCode}, {' '}\n//                                 {order.shippingAddress.phone}\n//                             </p>\n//\n//                             {order.isDelivered ? (\n//                                 <Message variant='success'>Order was delivered on {order.deliveredAt.substring(0, 10)}</Message>\n//                             ): (\n//                                 <Message variant='warning'>Order is not delivered yet</Message>\n//                             )}\n//                         </ListGroup.Item>\n//\n//                         <ListGroup.Item>\n//                             <h3>Payment Gateway</h3>\n//                             <p>\n//                                 {order.paymentMethod}\n//                             </p>\n//\n//                             {order.isPaid ? (\n//                                 <Message variant='success'>Order was paid on {order.paidAt.substring(0, 10)}</Message>\n//                             ): (\n//                                 <Message variant='warning'>Order not paid</Message>\n//                             )}\n//                         </ListGroup.Item>\n//\n//                         <ListGroup.Item>\n//                             <h3>Order Items</h3>\n//                             <p>\n//                                 {order.orderItems.length === 0 ? <Message variant='info'>Your basket is empty!</Message> :(\n//                                     <ListGroup variant='flush'>\n//                                         {order.orderItems.map((item, index) =>(\n//                                             <ListGroup.Item key={index}>\n//                                                 <Row>\n//                                                     <Col md={1}>\n//                                                         <Image src={item.image} alt={item.name} fluid rounded />\n//                                                     </Col>\n//\n//                                                     <Col>\n//                                                         <Link to={`/product/${item.product}`} >{item.name}</Link>\n//                                                     </Col>\n//\n//                                                     <Col md={4}>\n//                                                         {item.qty} x ₦{item.price} = ₦{(item.qty * item.price).toFixed(2)}\n//                                                     </Col>\n//                                                 </Row>\n//                                             </ListGroup.Item>\n//                                         ))}\n//\n//                                     </ListGroup>\n//                                 )}\n//                             </p>\n//                         </ListGroup.Item>\n//                     </ListGroup>\n//                 </Col>\n//\n//                 <Col md={4}>\n//                     <Card>\n//                         <ListGroup variant='flush'>\n//                             <ListGroup.Item>\n//                                 <h3>Order Summary</h3>\n//                             </ListGroup.Item>\n//\n//                             <ListGroup.Item>\n//                                 <Row>\n//                                     <Col>Items:</Col>\n//                                     <Col>₦{order.itemsPrice}</Col>\n//                                 </Row>\n//                             </ListGroup.Item>\n//\n//                             <ListGroup.Item>\n//                                 <Row>\n//                                     <Col>Shipping Fees:</Col>\n//                                     <Col>₦{order.shippingPrice}</Col>\n//                                 </Row>\n//                             </ListGroup.Item>\n//\n//                             <ListGroup.Item>\n//                                 <Row>\n//                                     <Col>Tax:</Col>\n//                                     <Col>₦{order.taxPrice}</Col>\n//                                 </Row>\n//                             </ListGroup.Item>\n//\n//                             <ListGroup.Item>\n//                                 <Row>\n//                                     <Col>Grand Total:</Col>\n//                                     <Col>₦{order.totalPrice}</Col>\n//                                 </Row>\n//                             </ListGroup.Item>\n//\n//                             {!order.isPaid && (\n//                                 <ListGroup.Item>\n//                                     {loadingPay && <Loader />}\n//\n//                                     {!sdkReady ? (\n//                                         <Loader />\n//                                     ) : (\n//                                         <PayPalButton\n//                                             amount={order.totalPrice}\n//                                             onSuccess={successfulPaymentHandler}\n//                                         />\n//                                     )}\n//\n//                                 </ListGroup.Item>\n//                             )}\n//\n//                         </ListGroup>\n//\n//                         {loadingDeliver && <Loader />}\n//                         {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\n//                             <ListGroup.Item>\n//                                 <Button\n//                                     className='btn btn-block'\n//                                     type='button'\n//                                     onClick={orderDeliveredHandler}\n//                                     style={{ width: '100%' }}>\n//                                     Mark as Delivered or Processed\n//                                 </Button>\n//                             </ListGroup.Item>\n//                         )}\n//                     </Card>\n//                 </Col>\n//             </Row>\n//         </div>\n//     )\n// }\n//\n// export default Order\n//\n//\n//\n//\n","/Users/abdulmutallib/Desktop/eAgric/frontend/src/components/UserManagement/UsersList/UsersList.js",["313","314","315","316","317","318","319"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport {Form, Button, Row, Col, Table, ListGroup, Modal} from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from \"../../Helpers/Loader/Loader\";\nimport Message from \"../../Helpers/Message/Message\";\nimport FormsContainer from \"../../../container/FormsContainer/FormsContainer\";\nimport { getUsersList, deleteUser } from \"../../../actions/actions\";\n\nfunction UsersList({ history }) {\n    const dispatch = useDispatch()\n\n    const usersList = useSelector(state => state.usersList)\n    const { error, loading, users } = usersList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const deleteUserS = useSelector(state => state.deleteUserS)\n    const { success: deleteUserSuccess, error: deleteUserError } = deleteUserS\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin){\n            dispatch(getUsersList())\n        }else {\n            history.push('/login')\n        }\n    }, [dispatch, history, deleteUserSuccess, userInfo])\n\n    const deleteUserHandler = (id) => {\n        if (window.confirm(\"Are you sure you want to delete?\")){\n            dispatch(deleteUser(id))\n        }\n    }\n\n    return (\n        <div>\n            <Row>\n                <Col md={9}>\n                <h3>Users List</h3>\n                {loading ? (\n                    <Loader />\n                ) : error ? (<Message variant='danger'>{error}</Message>\n                ) : (\n                    <Table striped hover bordered responsive className='table-sm'>\n                        <thead>\n                        <tr>\n                            <th>ID</th>\n                            <th>Name</th>\n                            <th>Email</th>\n                            <th>Is Admin</th>\n                            <th>Edit</th>\n                            <th>Delete</th>\n\n                        </tr>\n                        </thead>\n\n                        <tbody>\n                        {users.map(user => (\n                            <tr key={user.id}>\n                                <td>{user.id}</td>\n                                <td>{user.name}</td>\n                                <td>{user.email}</td>\n                                <td>{user.isAdmin ? (\n                                    <i className='fas fa-check' style={{color: 'green'}}></i>\n                                ) : (\n                                    <i className='fas fa-times' style={{color: 'red'}}></i>\n                                )}</td>\n                                <td>\n                                    <LinkContainer to={`/admin/user/${user._id}/edit/`}>\n                                        <Button className='btn-sm'>\n                                            <i className='fas fa-edit'></i>\n                                        </Button>\n                                    </LinkContainer>\n                                </td>\n\n                                <td>\n                                    <LinkContainer to={`/admin/users/`}>\n                                        <Button variant='danger' className='btn-sm' onClick={() => deleteUserHandler(user._id)}>\n                                            <i className='fas fa-trash'></i>\n                                        </Button>\n                                    </LinkContainer>\n                                </td>\n                            </tr>\n                        ))}\n                        </tbody>\n\n                    </Table>\n                )}\n            </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default UsersList","/Users/abdulmutallib/Desktop/eAgric/frontend/src/components/ProductsList/ProductsList.js",["320","321","322","323"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport {Form, Button, Row, Col, Table} from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from \"../Helpers/Loader/Loader\";\nimport Message from \"../Helpers/Message/Message\";\nimport {getUsersList, listProducts, deleteProduct, createProduct} from \"../../actions/actions\";\nimport Paginate from \"../../container/Paginate/Paginate\";\nimport { CREATE_PRODUCT_RESET } from \"../../constants/constants\";\n\nfunction ProductsList({ history, location}) {\n\n    const dispatch = useDispatch()\n\n    const productsList = useSelector(state => state.productsList)\n    const { error, loading, products, pages, page } = productsList\n\n    const deleteProductS = useSelector(state => state.deleteProductS)\n    const { error: deleteProductError, loading: deleteProductLoading, success: deleteProductSuccess } = deleteProductS\n\n    const createProductS = useSelector(state => state.createProductS)\n    const { error: createProductError, loading: createProductLoading, success: createProductSuccess, product: createdProduct} = createProductS\n\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    let keyword = history.location.search\n\n    useEffect(() => {\n        dispatch({type: CREATE_PRODUCT_RESET})\n        if (!userInfo.isAdmin){\n            history.push('/login')\n        }\n        if (createProductSuccess){\n            history.push(`/admin/product/${createdProduct._id}/edit/`)\n        }else{\n            dispatch(listProducts(keyword))\n        }\n\n    }, [dispatch, history, location, keyword, userInfo, deleteProductSuccess, createProductSuccess, createdProduct])\n\n    const deleteProductHandler = (id) => {\n        if (window.confirm(\"Are you sure you want to delete this product\")){\n            dispatch(deleteProduct(id))\n            console.log(\"product ID\", id)\n        }\n    }\n\n\n    const createProductHandler = () => {\n        dispatch(createProduct())\n    }\n    return (\n        <div>\n            <Row className='align-items-center'>\n                <Col>\n                    <h3>Products</h3>\n                </Col>\n\n                <Col className='text-center'>\n                    <Button className='my-3' onClick={createProductHandler}>\n                        <i className='fas fa-plus'> Add Post</i>\n                    </Button>\n                </Col>\n            </Row>\n\n            {deleteProductLoading && <Loader /> }\n            {deleteProductError && <Message variant='danger'>{deleteProductError}</Message> }\n\n            {createProductLoading && <Loader /> }\n            {createProductError && <Message variant='danger'>{createProductError}</Message> }\n\n                {loading ? (\n                    <Loader />\n                ) : error ? (<Message variant='danger'>{error}</Message>\n                ) : (\n                    <div>\n                    <Table striped hover bordered responsive className='table-sm'>\n                        <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Price</th>\n                            <th>Category</th>\n                            <th>Status</th>\n                            <th>Count In-stock</th>\n                            <th>Actions</th>\n                        </tr>\n                        </thead>\n\n                        <tbody>\n                        {products.map(product => (\n                            <tr key={product._id}>\n                                <td>{product.name}</td>\n                                <td>₦{product.price}</td>\n                                <td>{product.category}</td>\n                                <td>{product.countInStock > 0 ? <p style={{color: 'green'}}>Available</p> : <p style={{color: 'red'}}>Not Available</p> }</td>\n                                <td>{product.countInStock}</td>\n                                <td>\n                                    <LinkContainer to={`/admin/product/${product._id}/edit/`}>\n                                        <Button className='btn-sm'>\n                                            <i className='fas fa-edit'></i>\n                                        </Button>\n                                    </LinkContainer>\n\n                                    <Button variant='danger' className='btn-sm' onClick={() => deleteProductHandler(product._id)}>\n                                        <i className='fas fa-trash'></i>\n                                    </Button>\n                                </td>\n\n                            </tr>\n                        ))}\n                        </tbody>\n\n                    </Table>\n                        <Paginate page={page} pages={pages} isAdmin={true} />\n                    </div>\n                )}\n        </div>\n    )\n}\n\nexport default ProductsList","/Users/abdulmutallib/Desktop/eAgric/frontend/src/components/UserManagement/EditUser/EditUser.js",["324"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from \"../../Helpers/Loader/Loader\";\nimport { getUserDetails, updateUser } from \"../../../actions/actions\";\nimport Message from \"../../Helpers/Message/Message\";\nimport FormsContainer from \"../../../container/FormsContainer/FormsContainer\";\nimport { UPDATE_USER_RESET } from \"../../../constants/constants\";\n\n\n\nfunction EditUser({ match, history }) {\n\n    const userId = match.params.id\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [isAdmin, setIsAdmin] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { error, loading, user } = userDetails\n\n    const updateUserS = useSelector(state => state.updateUserS)\n    const { error: errorUpdatingUser, loading: loadingUpdateUser, success: successUpdatingUser } = updateUserS\n\n    useEffect(() => {\n        if (successUpdatingUser){\n            dispatch({type: UPDATE_USER_RESET})\n            history.push('/admin/users/')\n        }else{\n            if (!user.name || user._id !== Number(userId)){\n                dispatch(getUserDetails(userId))\n            }else {\n                setName(user.name)\n                setEmail(user.email)\n                setIsAdmin(user.isAdmin)\n            }\n        }\n    }, [userId, user, successUpdatingUser, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateUser({\n            _id:user._id,\n            name,\n            email,\n            isAdmin\n        }))\n    }\n\n    return (\n        <div>\n            <Link to='/admin/users/'>\n                Go Back\n            </Link>\n\n            <FormsContainer>\n                <h3>Edit User</h3>\n                <br/>\n                {loadingUpdateUser && <Loader />}\n                {errorUpdatingUser && <Message variant='danger' >{errorUpdatingUser}</Message>}\n                <br/>\n                {loading ? <Loader /> : error ? <Message variant='danger' >{error}</Message>\n                    : (\n                        <Form onSubmit={submitHandler}>\n                            <Form.Group controlId='name'>\n                                <Form.Control\n                                    type='name'\n                                    placeholder='Enter name'\n                                    value={name}\n                                    onChange={(e) => setName(e.target.value)}>\n                                </Form.Control>\n                            </Form.Group>\n                            <br/>\n                            <Form.Group controlId='email'>\n                                <Form.Control\n                                    type='email'\n                                    placeholder='Enter Email'\n                                    value={email}\n                                    onChange={(e) => setEmail(e.target.value)}>\n                                </Form.Control>\n                            </Form.Group>\n\n                            <br/>\n\n                            <Form.Group controlId='isadmin'>\n                                <Form.Check\n                                    type='checkbox'\n                                    label='Is Admin'\n                                    checked={isAdmin}\n                                    onChange={(e) => setIsAdmin(e.target.checked)}>\n                                </Form.Check>\n                            </Form.Group>\n\n                            <br/>\n\n                            <Button type='submit' variant='primary'>\n                                Update\n                            </Button>\n                        </Form>\n                    )}\n            </FormsContainer >\n        </div>\n    )}\n\nexport default EditUser","/Users/abdulmutallib/Desktop/eAgric/frontend/src/components/OrderList/OrderList.js",["325","326","327","328","329","330","331"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport {Form, Button, Row, Col, Table, ListGroup, Modal} from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from \"../Helpers/Loader/Loader\";\nimport Message from \"../Helpers/Message/Message\";\nimport FormsContainer from \"../../container/FormsContainer/FormsContainer\";\nimport { listOrders } from \"../../actions/actions\";\n\nfunction OrderList({ history }) {\n    const dispatch = useDispatch()\n\n    const listOrdersS = useSelector(state => state.listOrdersS)\n    const { error, loading, orders } = listOrdersS\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    useEffect(() => {\n        console.log(orders)\n        if (userInfo && userInfo.isAdmin){\n            dispatch(listOrders())\n        }else {\n            history.push('/login')\n        }\n    }, [dispatch, history, userInfo])\n\n\n    return (\n        <div>\n            <Row>\n                <Col>\n                    <h3>Order List</h3>\n                    <br/>\n                    {loading ? (\n                        <Loader />\n                    ) : error ? (<Message variant='danger'>{error}</Message>\n                    ) : (\n                        <Table striped hover bordered responsive className='table-sm'>\n                            <thead>\n                            <tr>\n                                <th>ID</th>\n                                <th>User</th>\n                                <th>Date</th>\n                                <th>Total Price</th>\n                                <th>Payment Status</th>\n                                <th>Delivery Status</th>\n                                <th>Type of Order</th>\n                                <th>Action</th>\n\n                            </tr>\n                            </thead>\n\n                            <tbody>\n                            {orders.map(order => (\n                                <tr key={order._id}>\n                                    <td>{order._id}</td>\n                                    <td>{order.user && order.user.name}</td>\n                                    <td>{order.createdAt.substring(0, 10)}</td>\n                                    <td>₦{order.totalPrice}</td>\n                                    <td>{order.isPaid ? (\n                                        <i className='fas fa-check' style={{color: 'green'}}></i>\n                                    ) : (\n                                        <i className='fas fa-times' style={{color: 'red'}}></i>\n                                    )}</td>\n\n                                    <td>{order.isDelivered ? (\n                                        <i className='fas fa-check' style={{color: 'green'}}></i>\n                                    ) : (\n                                        <i className='fas fa-times' style={{color: 'red'}}></i>\n                                    )}</td>\n                                    {order.orderItems.map(r =>(\n                                        <td>{r.purchaseTo}</td>\n                                    ))}\n                                    <td>\n                                        <LinkContainer to={`/order/${order._id}/`}>\n                                            <Button className='btn-sm'>\n                                                Details\n                                            </Button>\n                                        </LinkContainer>\n                                    </td>\n\n                                </tr>\n                            ))}\n                            </tbody>\n\n                        </Table>\n                    )}\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default OrderList","/Users/abdulmutallib/Desktop/eAgric/frontend/src/components/SearchBox/SearchBox.js",[],"/Users/abdulmutallib/Desktop/eAgric/frontend/src/container/Paginate/Paginate.js",[],"/Users/abdulmutallib/Desktop/eAgric/frontend/src/container/TopProductsCarousel/TopProductsCarousel.js",[],"/Users/abdulmutallib/Desktop/eAgric/frontend/src/components/Header/HeaderScreen.js",[],"/Users/abdulmutallib/Desktop/eAgric/frontend/src/components/Helpers/AlertInfo/AlertInfo.js",["332"],"import React, { useEffect }from \"react\";\n\nfunction AlertInfo() {\n\n    return(\n        <div>\n            <div className=\"covid19-info\">\n                <h3 className=\"covid19-info-text\">Covid19 Information</h3>\n            </div>\n\n            <br/>\n        </div>\n    )\n}\n\nexport default AlertInfo;","/Users/abdulmutallib/Desktop/eAgric/frontend/src/container/PrivateRoute/PrivateRoute.js",[],"/Users/abdulmutallib/Desktop/eAgric/frontend/src/container/MainCarousel/MainCarouel.js",["333","334","335","336","337","338","339"],"import React, { useEffect }  from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport {Carousel, Image} from \"react-bootstrap\";\nimport Loader from \"../../components/Helpers/Loader/Loader\";\nimport Message from \"../../components/Helpers/Message/Message\";\nimport {topRatedProductsAction} from \"../../actions/actions\";\n\n\nfunction TopProductsCarousel() {\n    const dispatch = useDispatch()\n\n    const topRatedProductsS = useSelector(state => state.topRatedProductsS)\n    const { error, loading, products } = topRatedProductsS\n\n\n    useEffect(() => {\n        dispatch(topRatedProductsAction())\n    }, [dispatch, ])\n\n    return(\n                <Carousel>\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src=\"holder.js/800x400?text=First slide&bg=373940\"\n                            alt=\"First slide\"\n                        />\n                        <Carousel.Caption>\n                            <h3>First slide label</h3>\n                            <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src=\"holder.js/800x400?text=Second slide&bg=282c34\"\n                            alt=\"Second slide\"\n                        />\n\n                        <Carousel.Caption>\n                            <h3>Second slide label</h3>\n                            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src=\"holder.js/800x400?text=Third slide&bg=20232a\"\n                            alt=\"Third slide\"\n                        />\n\n                        <Carousel.Caption>\n                            <h3>Third slide label</h3>\n                            <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur.</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n\n\n                </Carousel>\n\n    )\n}\n\nexport default TopProductsCarousel\n","/Users/abdulmutallib/Desktop/blinkpost/backend/frontend/src/index.js",[],"/Users/abdulmutallib/Desktop/blinkpost/backend/frontend/src/reportWebVitals.js",[],"/Users/abdulmutallib/Desktop/blinkpost/backend/frontend/src/store.js",[],"/Users/abdulmutallib/Desktop/blinkpost/backend/frontend/src/App.js",[],"/Users/abdulmutallib/Desktop/blinkpost/backend/frontend/src/reducers/reducers.js",[],"/Users/abdulmutallib/Desktop/blinkpost/backend/frontend/src/components/Login/Login.js",[],"/Users/abdulmutallib/Desktop/blinkpost/backend/frontend/src/components/Register/Register.js",[],"/Users/abdulmutallib/Desktop/blinkpost/backend/frontend/src/container/Home/Home.js",["340"],"/Users/abdulmutallib/Desktop/blinkpost/backend/frontend/src/components/Profile/Profile.js",[],"/Users/abdulmutallib/Desktop/blinkpost/backend/frontend/src/components/Header/HeaderScreen.js",[],"/Users/abdulmutallib/Desktop/blinkpost/backend/frontend/src/container/PrivateRoute/PrivateRoute.js",[],"/Users/abdulmutallib/Desktop/blinkpost/backend/frontend/src/components/Footer/Footer.js",[],"/Users/abdulmutallib/Desktop/blinkpost/backend/frontend/src/constants/constants.js",[],"/Users/abdulmutallib/Desktop/blinkpost/backend/frontend/src/container/Paginate/Paginate.js",[],"/Users/abdulmutallib/Desktop/blinkpost/backend/frontend/src/container/FormsContainer/FormsContainer.js",[],"/Users/abdulmutallib/Desktop/blinkpost/backend/frontend/src/components/Post/Post.js",[],"/Users/abdulmutallib/Desktop/blinkpost/backend/frontend/src/components/Rating/Rating.js",[],["341","342"],"/Users/abdulmutallib/Desktop/blinkpost/backend/frontend/src/actions/actions.js",["343","344","345"],"/Users/abdulmutallib/Desktop/blinkpost/backend/frontend/src/components/SearchBox/SearchBox.js",[],"/Users/abdulmutallib/Desktop/blinkpost/backend/frontend/src/components/Helpers/Message/Message.js",[],"/Users/abdulmutallib/Desktop/blinkpost/backend/frontend/src/components/Helpers/Loader/Loader.js",[],"/Users/abdulmutallib/Desktop/blinkpost/backend/frontend/src/components/AddEditPost/AddEditPosts.js",["346"],"/Users/abdulmutallib/Desktop/blinkpost/backend/frontend/src/components/PostsList/PostsList.js",["347","348","349"],"/Users/abdulmutallib/Desktop/blinkpost/backend/frontend/src/components/SinglePost/SinglePost.js",[],{"ruleId":"350","severity":1,"message":"351","line":2,"column":8,"nodeType":"352","messageId":"353","endLine":2,"endColumn":14},{"ruleId":"354","severity":1,"message":"355","line":50,"column":8,"nodeType":"356","endLine":50,"endColumn":72,"suggestions":"357"},{"ruleId":"358","severity":1,"message":"359","line":181,"column":75,"nodeType":"360","messageId":"361","endLine":181,"endColumn":77},{"ruleId":"358","severity":1,"message":"359","line":184,"column":78,"nodeType":"360","messageId":"361","endLine":184,"endColumn":80},{"ruleId":"350","severity":1,"message":"362","line":2,"column":19,"nodeType":"352","messageId":"353","endLine":2,"endColumn":23},{"ruleId":"350","severity":1,"message":"363","line":10,"column":8,"nodeType":"352","messageId":"353","endLine":10,"endColumn":17},{"ruleId":"350","severity":1,"message":"364","line":11,"column":8,"nodeType":"352","messageId":"353","endLine":11,"endColumn":19},{"ruleId":"350","severity":1,"message":"365","line":4,"column":57,"nodeType":"352","messageId":"353","endLine":4,"endColumn":70},{"ruleId":"358","severity":1,"message":"359","line":45,"column":30,"nodeType":"360","messageId":"361","endLine":45,"endColumn":32},{"ruleId":"350","severity":1,"message":"366","line":27,"column":5,"nodeType":"352","messageId":"353","endLine":27,"endColumn":30},{"ruleId":"350","severity":1,"message":"367","line":41,"column":5,"nodeType":"352","messageId":"353","endLine":41,"endColumn":30},{"ruleId":"350","severity":1,"message":"368","line":56,"column":5,"nodeType":"352","messageId":"353","endLine":56,"endColumn":22},{"ruleId":"350","severity":1,"message":"369","line":63,"column":5,"nodeType":"352","messageId":"353","endLine":63,"endColumn":25},{"ruleId":"350","severity":1,"message":"370","line":67,"column":5,"nodeType":"352","messageId":"353","endLine":67,"endColumn":25},{"ruleId":"350","severity":1,"message":"371","line":78,"column":5,"nodeType":"352","messageId":"353","endLine":78,"endColumn":32},{"ruleId":"350","severity":1,"message":"372","line":656,"column":17,"nodeType":"352","messageId":"353","endLine":656,"endColumn":21},{"ruleId":"350","severity":1,"message":"373","line":4,"column":10,"nodeType":"352","messageId":"353","endLine":4,"endColumn":21},{"ruleId":"350","severity":1,"message":"374","line":4,"column":23,"nodeType":"352","messageId":"353","endLine":4,"endColumn":34},{"ruleId":"375","severity":1,"message":"376","line":10,"column":31,"nodeType":"377","messageId":"361","endLine":10,"endColumn":35},{"ruleId":"350","severity":1,"message":"378","line":2,"column":10,"nodeType":"352","messageId":"353","endLine":2,"endColumn":14},{"ruleId":"350","severity":1,"message":"379","line":8,"column":8,"nodeType":"352","messageId":"353","endLine":8,"endColumn":22},{"ruleId":"350","severity":1,"message":"380","line":22,"column":23,"nodeType":"352","messageId":"353","endLine":22,"endColumn":40},{"ruleId":"350","severity":1,"message":"381","line":22,"column":42,"nodeType":"352","messageId":"353","endLine":22,"endColumn":61},{"ruleId":"350","severity":1,"message":"378","line":2,"column":10,"nodeType":"352","messageId":"353","endLine":2,"endColumn":14},{"ruleId":"350","severity":1,"message":"382","line":3,"column":24,"nodeType":"352","messageId":"353","endLine":3,"endColumn":27},{"ruleId":"350","severity":1,"message":"383","line":3,"column":29,"nodeType":"352","messageId":"353","endLine":3,"endColumn":32},{"ruleId":"350","severity":1,"message":"378","line":3,"column":9,"nodeType":"352","messageId":"353","endLine":3,"endColumn":13},{"ruleId":"350","severity":1,"message":"378","line":2,"column":10,"nodeType":"352","messageId":"353","endLine":2,"endColumn":14},{"ruleId":"350","severity":1,"message":"382","line":3,"column":24,"nodeType":"352","messageId":"353","endLine":3,"endColumn":27},{"ruleId":"350","severity":1,"message":"384","line":5,"column":8,"nodeType":"352","messageId":"353","endLine":5,"endColumn":14},{"ruleId":"350","severity":1,"message":"385","line":6,"column":8,"nodeType":"352","messageId":"353","endLine":6,"endColumn":15},{"ruleId":"350","severity":1,"message":"386","line":1,"column":17,"nodeType":"352","messageId":"353","endLine":1,"endColumn":25},{"ruleId":"350","severity":1,"message":"384","line":5,"column":8,"nodeType":"352","messageId":"353","endLine":5,"endColumn":14},{"ruleId":"350","severity":1,"message":"379","line":7,"column":8,"nodeType":"352","messageId":"353","endLine":7,"endColumn":22},{"ruleId":"358","severity":1,"message":"359","line":25,"column":45,"nodeType":"360","messageId":"361","endLine":25,"endColumn":47},{"ruleId":"354","severity":1,"message":"387","line":54,"column":8,"nodeType":"356","endLine":54,"endColumn":26,"suggestions":"388"},{"ruleId":"358","severity":1,"message":"359","line":146,"column":94,"nodeType":"360","messageId":"361","endLine":146,"endColumn":96},{"ruleId":"358","severity":1,"message":"359","line":147,"column":87,"nodeType":"360","messageId":"361","endLine":147,"endColumn":89},{"ruleId":"350","severity":1,"message":"379","line":7,"column":8,"nodeType":"352","messageId":"353","endLine":7,"endColumn":22},{"ruleId":"350","severity":1,"message":"389","line":9,"column":9,"nodeType":"352","messageId":"353","endLine":9,"endColumn":21},{"ruleId":"350","severity":1,"message":"390","line":15,"column":5,"nodeType":"352","messageId":"353","endLine":15,"endColumn":25},{"ruleId":"354","severity":1,"message":"391","line":86,"column":8,"nodeType":"356","endLine":86,"endColumn":72,"suggestions":"392"},{"ruleId":"358","severity":1,"message":"359","line":183,"column":71,"nodeType":"360","messageId":"361","endLine":183,"endColumn":73},{"ruleId":"358","severity":1,"message":"359","line":184,"column":64,"nodeType":"360","messageId":"361","endLine":184,"endColumn":66},{"ruleId":"358","severity":1,"message":"359","line":185,"column":68,"nodeType":"360","messageId":"361","endLine":185,"endColumn":70},{"ruleId":"358","severity":1,"message":"359","line":186,"column":68,"nodeType":"360","messageId":"361","endLine":186,"endColumn":70},{"ruleId":"358","severity":1,"message":"359","line":190,"column":73,"nodeType":"360","messageId":"361","endLine":190,"endColumn":75},{"ruleId":"358","severity":1,"message":"359","line":191,"column":66,"nodeType":"360","messageId":"361","endLine":191,"endColumn":68},{"ruleId":"358","severity":1,"message":"359","line":192,"column":70,"nodeType":"360","messageId":"361","endLine":192,"endColumn":72},{"ruleId":"358","severity":1,"message":"359","line":193,"column":70,"nodeType":"360","messageId":"361","endLine":193,"endColumn":72},{"ruleId":"350","severity":1,"message":"386","line":1,"column":17,"nodeType":"352","messageId":"353","endLine":1,"endColumn":25},{"ruleId":"350","severity":1,"message":"378","line":2,"column":10,"nodeType":"352","messageId":"353","endLine":2,"endColumn":14},{"ruleId":"350","severity":1,"message":"393","line":3,"column":9,"nodeType":"352","messageId":"353","endLine":3,"endColumn":13},{"ruleId":"350","severity":1,"message":"394","line":3,"column":40,"nodeType":"352","messageId":"353","endLine":3,"endColumn":49},{"ruleId":"350","severity":1,"message":"395","line":3,"column":51,"nodeType":"352","messageId":"353","endLine":3,"endColumn":56},{"ruleId":"350","severity":1,"message":"379","line":8,"column":8,"nodeType":"352","messageId":"353","endLine":8,"endColumn":22},{"ruleId":"350","severity":1,"message":"396","line":21,"column":48,"nodeType":"352","messageId":"353","endLine":21,"endColumn":63},{"ruleId":"350","severity":1,"message":"386","line":1,"column":17,"nodeType":"352","messageId":"353","endLine":1,"endColumn":25},{"ruleId":"350","severity":1,"message":"378","line":2,"column":10,"nodeType":"352","messageId":"353","endLine":2,"endColumn":14},{"ruleId":"350","severity":1,"message":"393","line":3,"column":9,"nodeType":"352","messageId":"353","endLine":3,"endColumn":13},{"ruleId":"350","severity":1,"message":"397","line":8,"column":9,"nodeType":"352","messageId":"353","endLine":8,"endColumn":21},{"ruleId":"354","severity":1,"message":"398","line":42,"column":8,"nodeType":"356","endLine":42,"endColumn":52,"suggestions":"399"},{"ruleId":"350","severity":1,"message":"386","line":1,"column":17,"nodeType":"352","messageId":"353","endLine":1,"endColumn":25},{"ruleId":"350","severity":1,"message":"378","line":2,"column":10,"nodeType":"352","messageId":"353","endLine":2,"endColumn":14},{"ruleId":"350","severity":1,"message":"393","line":3,"column":9,"nodeType":"352","messageId":"353","endLine":3,"endColumn":13},{"ruleId":"350","severity":1,"message":"394","line":3,"column":40,"nodeType":"352","messageId":"353","endLine":3,"endColumn":49},{"ruleId":"350","severity":1,"message":"395","line":3,"column":51,"nodeType":"352","messageId":"353","endLine":3,"endColumn":56},{"ruleId":"350","severity":1,"message":"379","line":8,"column":8,"nodeType":"352","messageId":"353","endLine":8,"endColumn":22},{"ruleId":"354","severity":1,"message":"400","line":27,"column":8,"nodeType":"356","endLine":27,"endColumn":37,"suggestions":"401"},{"ruleId":"350","severity":1,"message":"402","line":1,"column":17,"nodeType":"352","messageId":"353","endLine":1,"endColumn":26},{"ruleId":"350","severity":1,"message":"378","line":3,"column":10,"nodeType":"352","messageId":"353","endLine":3,"endColumn":14},{"ruleId":"350","severity":1,"message":"403","line":4,"column":19,"nodeType":"352","messageId":"353","endLine":4,"endColumn":24},{"ruleId":"350","severity":1,"message":"384","line":5,"column":8,"nodeType":"352","messageId":"353","endLine":5,"endColumn":14},{"ruleId":"350","severity":1,"message":"385","line":6,"column":8,"nodeType":"352","messageId":"353","endLine":6,"endColumn":15},{"ruleId":"350","severity":1,"message":"404","line":14,"column":13,"nodeType":"352","messageId":"353","endLine":14,"endColumn":18},{"ruleId":"350","severity":1,"message":"405","line":14,"column":20,"nodeType":"352","messageId":"353","endLine":14,"endColumn":27},{"ruleId":"350","severity":1,"message":"406","line":14,"column":29,"nodeType":"352","messageId":"353","endLine":14,"endColumn":37},{"ruleId":"350","severity":1,"message":"362","line":2,"column":19,"nodeType":"352","messageId":"353","endLine":2,"endColumn":23},{"ruleId":"407","replacedBy":"408"},{"ruleId":"409","replacedBy":"410"},{"ruleId":"350","severity":1,"message":"411","line":12,"column":5,"nodeType":"352","messageId":"353","endLine":12,"endColumn":30},{"ruleId":"350","severity":1,"message":"412","line":16,"column":5,"nodeType":"352","messageId":"353","endLine":16,"endColumn":22},{"ruleId":"350","severity":1,"message":"372","line":250,"column":17,"nodeType":"352","messageId":"353","endLine":250,"endColumn":21},{"ruleId":"350","severity":1,"message":"413","line":6,"column":10,"nodeType":"352","messageId":"353","endLine":6,"endColumn":25},{"ruleId":"350","severity":1,"message":"386","line":1,"column":17,"nodeType":"352","messageId":"353","endLine":1,"endColumn":25},{"ruleId":"350","severity":1,"message":"378","line":2,"column":10,"nodeType":"352","messageId":"353","endLine":2,"endColumn":14},{"ruleId":"350","severity":1,"message":"393","line":3,"column":9,"nodeType":"352","messageId":"353","endLine":3,"endColumn":13},"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'product.period'. Either include it or remove the dependency array.","ArrayExpression",["414"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Card' is defined but never used.","'AlertInfo' is defined but never used.","'MainCarouel' is defined but never used.","'ListGroupItem' is defined but never used.","'USER_UPDATE_PROFILE_RESET' is defined but never used.","'UPDATE_ORDER_TO_PAY_RESET' is defined but never used.","'UPDATE_USER_RESET' is defined but never used.","'CREATE_PRODUCT_RESET' is defined but never used.","'UPDATE_PRODUCT_RESET' is defined but never used.","'CREATE_PRODUCT_REVIEW_RESET' is defined but never used.","'data' is assigned a value but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","'Link' is defined but never used.","'FormsContainer' is defined but never used.","'orderDetailsError' is assigned a value but never used.","'loadingOrderDetails' is assigned a value but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Loader' is defined but never used.","'Message' is defined but never used.","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'order._id'. Either include them or remove the dependency array.",["415"],"'PayPalButton' is defined but never used.","'LIST_MY_ORDERS_RESET' is defined but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["416"],"'Form' is defined but never used.","'ListGroup' is defined but never used.","'Modal' is defined but never used.","'deleteUserError' is assigned a value but never used.","'getUsersList' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["417"],"React Hook useEffect has a missing dependency: 'orders'. Either include it or remove the dependency array.",["418"],"'useEffect' is defined but never used.","'Image' is defined but never used.","'error' is assigned a value but never used.","'loading' is assigned a value but never used.","'products' is assigned a value but never used.","no-native-reassign",["419"],"no-negated-in-lhs",["420"],"'CREATE_POST_COMMENT_RESET' is defined but never used.","'UPDATE_POST_RESET' is defined but never used.","'postsListAction' is defined but never used.",{"desc":"421","fix":"422"},{"desc":"423","fix":"424"},{"desc":"425","fix":"426"},{"desc":"427","fix":"428"},{"desc":"429","fix":"430"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [dispatch, match, location, history, createProductReviewSuccess, product.period]",{"range":"431","text":"432"},"Update the dependencies array to be: [success, history, order._id, dispatch]",{"range":"433","text":"434"},"Update the dependencies array to be: [dispatch, order, order_id, successPay, successDeliver, userInfo, history]",{"range":"435","text":"436"},"Update the dependencies array to be: [userId, user, successUpdatingUser, history, dispatch]",{"range":"437","text":"438"},"Update the dependencies array to be: [dispatch, history, orders, userInfo]",{"range":"439","text":"440"},[2121,2185],"[dispatch, match, location, history, createProductReviewSuccess, product.period]",[2588,2606],"[success, history, order._id, dispatch]",[3113,3177],"[dispatch, order, order_id, successPay, successDeliver, userInfo, history]",[1487,1531],"[userId, user, successUpdatingUser, history, dispatch]",[985,1014],"[dispatch, history, orders, userInfo]"]