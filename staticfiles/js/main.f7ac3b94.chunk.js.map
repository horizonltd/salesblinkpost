{"version":3,"sources":["components/Footer/Footer.js","components/Post/Post.js","components/Helpers/Loader/Loader.js","components/Helpers/Message/Message.js","constants/constants.js","actions/actions.js","container/Paginate/Paginate.js","components/SearchBox/SearchBox.js","container/Home/Home.js","components/SinglePost/SinglePost.js","container/FormsContainer/FormsContainer.js","components/Login/Login.js","components/Register/Register.js","components/Profile/Profile.js","components/AddEditPost/AddEditPosts.js","components/Header/HeaderScreen.js","container/PrivateRoute/PrivateRoute.js","components/PostsList/PostsList.js","App.js","store.js","reducers/reducers.js","reportWebVitals.js","index.js"],"names":["Footer","Container","Row","Col","className","Post","post","Card","to","id","Img","src","image","Body","Title","as","title","Loader","Spinner","animation","role","style","height","width","margin","display","Message","variant","children","Alert","POST_LIST_REQUEST","POST_LIST_SUCCESS","POST_LIST_FAIL","POST_DETAILS_REQUEST","POST_DETAILS_SUCCESS","POST_DETAILS_FAIL","CREATE_POST_COMMENT_REQUEST","CREATE_POST_COMMENT_SUCCESS","CREATE_POST_COMMENT_FAIL","CREATE_POST_COMMENT_RESET","UPDATE_POST_REQUEST","UPDATE_POST_SUCCESS","UPDATE_POST_FAIL","UPDATE_POST_RESET","DELETE_POST_REQUEST","DELETE_POST_SUCCESS","DELETE_POST_FAIL","CREATE_POST_REQUEST","CREATE_POST_SUCCESS","CREATE_POST_FAIL","CREATE_POST_RESET","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","UPDATE_USER_REQUEST","UPDATE_USER_SUCCESS","UPDATE_USER_FAIL","UPDATE_USER_RESET","postsListAction","keyword","dispatch","a","type","axios","get","data","payload","response","detail","message","postDetailsAction","Paginate","pages","page","isAdmin","split","Pagination","Array","keys","map","x","Item","active","SearchBox","useState","setKeyword","history","useHistory","submitSearchHandler","e","preventDefault","push","location","pathname","Form","onSubmit","inline","InputGroup","FormControl","placeholder","name","backgroundColor","background","color","onChange","target","value","Button","onClick","Home","useDispatch","postsListStore","useSelector","state","error","loading","posts","search","console","log","useEffect","sm","md","lg","xl","SinglePost","match","comment","setComment","postDetails","createPostComment","createPostCommentLoading","createPostCommentError","createPostCommentSuccess","success","userInfo","userLogin","redirect","params","Image","alt","fluid","ListGroup","Text","content","comments","length","com","created_on","substring","postId","getState","config","headers","Authorization","token","createPostCommentAction","Group","controlId","Control","required","row","disabled","FormsContainer","xs","LoginScreen","email","setEmail","password","setPassword","localStorage","setItem","JSON","stringify","login","Register","setName","confirmPassword","setConfirmPassword","setMessage","userRegister","register","Profile","userDetails","user","userUpdateProfile","_id","padding","put","updateUserProfile","Table","striped","responsive","textAlign","AddEditPost","setTitle","slug","setSlug","setContent","setImage","uploadPostImage","setUploadPostImage","updatePost","updatePostError","updatePostLoading","updatePostSuccess","uploadPostImageHandler","file","files","formData","FormData","append","updatePostAction","Label","size","custom","rows","HeaderScreen","Navbar","collapseOnSelect","expand","bg","Brand","Toggle","Collapse","Nav","Link","NavDropdown","removeItem","PrivateRoute","Component","component","rest","render","props","from","PostsList","deletePost","deletePostError","deletePostLoading","deletePostSuccess","createPost","createPostError","createPostLoading","createPostSuccess","createdPost","deletePostHandler","window","confirm","delete","deletePostAction","hover","bordered","App","path","exact","Login","reducer","combineReducers","action","product","updateUserS","initialState","getItem","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.f7ac3b94.chunk.js","sourcesContent":["import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nfunction Footer() {\n    return (\n        <footer>\n            <Container>\n                <Row>\n                    <Col className=\"text-center py-3\">Copyright &copy; SalesBlink</Col>\n                </Row>\n            </Container>\n        </footer>\n    )\n}\n\nexport default Footer","import React from \"react\";\nimport {Card} from \"react-bootstrap\";\nimport { Link } from 'react-router-dom';\n\nfunction Post({ post }) {\n    return(\n        <div>\n            <Card className=\"my-3 p-3 rounded\">\n                <Link to={`/post/${post.id}`}>\n                    <Card.Img src={post.image} />\n                </Link>\n\n                <Card.Body>\n                    <Link to={`/post/${post.id}`}>\n                       <Card.Title as=\"div\">\n                           <strong>{post.title}</strong>\n                       </Card.Title>\n                    </Link>\n                </Card.Body>\n\n            </Card>\n        </div>\n    );\n}\n\nexport default Post;","import React from 'react'\nimport { Spinner } from 'react-bootstrap'\n\nfunction Loader() {\n    return (\n        <Spinner\n            animation='border'\n            role='status'\n            style={{\n                height: '50px',\n                width: '50px',\n                margin: 'auto',\n                display: 'block'\n            }}>\n            <span className='sr-only'>Loading products...</span>\n        </Spinner>\n    )\n}\n\nexport default Loader","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nfunction Message({ variant, children }) {\n    return (\n        <Alert variant={variant}>\n            {children}\n        </Alert>\n    )\n}\n\nexport default Message;","export const POST_LIST_REQUEST = 'POST_LIST_REQUEST'\nexport const POST_LIST_SUCCESS = 'POST_LIST_SUCCESS'\nexport const POST_LIST_FAIL = 'POST_LIST_FAIL'\nexport const POST_DETAILS_REQUEST = 'POST_DETAILS_REQUEST'\nexport const POST_DETAILS_SUCCESS = 'POST_DETAILS_SUCCESS'\nexport const POST_DETAILS_FAIL = 'POST_DETAILS_FAIL'\nexport const CREATE_POST_COMMENT_REQUEST = 'CREATE_POST_COMMENT_REQUEST'\nexport const CREATE_POST_COMMENT_SUCCESS = 'CREATE_POST_COMMENT_SUCCESS'\nexport const CREATE_POST_COMMENT_FAIL = 'CREATE_POST_COMMENT_FAIL'\nexport const CREATE_POST_COMMENT_RESET = 'CREATE_POST_COMMENT_RESET'\nexport const UPDATE_POST_REQUEST = 'UPDATE_POST_REQUEST'\nexport const UPDATE_POST_SUCCESS = 'UPDATE_POST_SUCCESS'\nexport const UPDATE_POST_FAIL = 'UPDATE_POST_FAIL'\nexport const UPDATE_POST_RESET = 'UPDATE_POST_RESET'\nexport const DELETE_POST_REQUEST = 'DELETE_POST_REQUEST'\nexport const DELETE_POST_SUCCESS = 'DELETE_POST_SUCCESS'\nexport const DELETE_POST_FAIL = 'DELETE_POST_FAIL'\nexport const CREATE_POST_REQUEST = 'CREATE_POST_REQUEST'\nexport const CREATE_POST_SUCCESS = 'CREATE_POST_SUCCESS'\nexport const CREATE_POST_FAIL = 'CREATE_POST_FAIL'\nexport const CREATE_POST_RESET = 'CREATE_POST_RESET'\nexport const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\nexport const USER_LOGOUT = 'USER_LOGOUT'\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\nexport const UPDATE_USER_REQUEST = 'UPDATE_USER_REQUEST'\nexport const UPDATE_USER_SUCCESS = 'UPDATE_USER_SUCCESS'\nexport const UPDATE_USER_FAIL = 'UPDATE_USER_FAIL'\nexport const UPDATE_USER_RESET = 'UPDATE_USER_RESET'\n\n\n\n\n\n\n\n\n","import axios from \"axios\";\nimport {\n    POST_LIST_REQUEST,\n    POST_LIST_SUCCESS,\n    POST_LIST_FAIL,\n    POST_DETAILS_REQUEST,\n    POST_DETAILS_SUCCESS,\n    POST_DETAILS_FAIL,\n    CREATE_POST_COMMENT_REQUEST,\n    CREATE_POST_COMMENT_SUCCESS,\n    CREATE_POST_COMMENT_FAIL,\n    CREATE_POST_COMMENT_RESET,\n    UPDATE_POST_REQUEST,\n    UPDATE_POST_SUCCESS,\n    UPDATE_POST_FAIL,\n    UPDATE_POST_RESET,\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n    USER_LOGOUT,\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_DETAILS_RESET,\n    CREATE_POST_REQUEST,\n    CREATE_POST_SUCCESS,\n    CREATE_POST_FAIL,\n    DELETE_POST_REQUEST,\n    DELETE_POST_SUCCESS,\n    DELETE_POST_FAIL,\n\n\n} from '../constants/constants';\n\n\n// USER ACTIONS\nexport const login = (email, password) => async (dispatch) =>{\n    try{\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/users/login/',\n            { 'username': email, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    }catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const register = (name, email, password) => async (dispatch) =>{\n    try{\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        })\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/users/register/',\n            { 'name': name, 'email': email, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    }catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo')\n    dispatch({ type: USER_LOGOUT })\n    dispatch({ type: USER_DETAILS_RESET })\n}\n\n\n// Post Actions\nexport const postsListAction = (keyword = '') => async (dispatch) =>{\n    try{\n        dispatch({type: POST_LIST_REQUEST})\n        const { data } =  await axios.get(`/api/post${keyword}`);\n        dispatch({\n            type: POST_LIST_SUCCESS,\n            payload: data\n        })\n    }catch (error) {\n        dispatch({\n            type: POST_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n            ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const postDetailsAction = (id) => async (dispatch) =>{\n    try{\n        dispatch({type: POST_DETAILS_REQUEST})\n        const { data } =  await axios.get(`/api/post/${id}`);\n        dispatch({\n            type: POST_DETAILS_SUCCESS,\n            payload: data\n        })\n    }catch (error) {\n        dispatch({\n            type: POST_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const createPostCommentAction = (postId, comment) => async (dispatch, getState) =>{\n    try{\n        dispatch({\n            type: CREATE_POST_COMMENT_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(`/api/post/${postId}/comment/`, comment, config)\n\n        dispatch({\n            type: CREATE_POST_COMMENT_SUCCESS,\n            payload: data\n        })\n\n    }catch (error) {\n        dispatch({\n            type: CREATE_POST_COMMENT_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const updatePostAction = (post) => async (dispatch, getState) =>{\n    try{\n        dispatch({\n            type: UPDATE_POST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(`/api/post/update/${post.id}/`, post, config)\n\n        dispatch({\n            type: UPDATE_POST_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: POST_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    }catch (error) {\n        dispatch({\n            type: UPDATE_POST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const deletePostAction = (id) => async (dispatch, getState) =>{\n    try{\n        dispatch({\n            type: DELETE_POST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(`/api/post/delete/${id}/`,config)\n\n        dispatch({\n            type: DELETE_POST_SUCCESS,\n        })\n\n    }catch (error) {\n        dispatch({\n            type: DELETE_POST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const createPostAction = () => async (dispatch, getState) =>{\n    try{\n        dispatch({\n            type: CREATE_POST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(`/api/post/create/`,{}, config)\n\n        dispatch({\n            type: CREATE_POST_SUCCESS,\n            payload: data\n        })\n\n    }catch (error) {\n        dispatch({\n            type: CREATE_POST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const getUserDetails = (id) => async (dispatch, getState) =>{\n    try{\n        dispatch({\n            type: USER_DETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(`/api/users/${id}/`, config)\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    }catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const updateUserProfile = (user) => async (dispatch, getState) =>{\n    try{\n        dispatch({\n            type: USER_UPDATE_PROFILE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(`/api/users/profile/update/`,user,config)\n\n        dispatch({\n            type: USER_UPDATE_PROFILE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    }catch (error) {\n        dispatch({\n            type: USER_UPDATE_PROFILE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n","import React from 'react'\nimport { Pagination } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nfunction Paginate({ pages, page, keyword = '', isAdmin = false }) {\n    if (keyword) {\n        keyword = keyword.split('?keyword=')[1].split('&')[0]\n    }\n\n    return (pages > 1 && (\n            <Pagination>\n                {[...Array(pages).keys()].map((x) => (\n                    <LinkContainer\n                        key={x + 1}\n                        to={!isAdmin ? `/?keyword=${keyword}&page=${x + 1}`\n                            : `/admin/posts/?keyword=${keyword}&page=${x + 1}`\n                        }\n                    >\n                        <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\n                    </LinkContainer>\n                ))}\n            </Pagination>\n        )\n    )\n}\n\nexport default Paginate","import React, { useState } from 'react'\nimport {Button, Form, FormControl, InputGroup} from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\n\nfunction SearchBox() {\n    const [keyword, setKeyword] = useState('')\n\n    let history = useHistory()\n\n    const submitSearchHandler = (e) => {\n        e.preventDefault()\n        if (keyword) {\n            history.push(`/?keyword=${keyword}&page=1`)\n        } else {\n            history.push(history.push(history.location.pathname))\n        }\n    }\n\n    return (\n        <Form onSubmit={submitSearchHandler} inline>\n\n            <InputGroup>\n                <FormControl\n                    placeholder=\"Search post\"\n                    aria-label=\"Search post\"\n                    aria-describedby=\"basic-addon2\"\n                    type='text'\n                    name='q'\n                    style={{\n                        height: '100px%',\n                        margin: '10px',\n                        backgroundColor: 'dark',\n                        background: 'dark',\n                        color: 'black',\n                    }}\n                    onChange={(e) => setKeyword(e.target.value)}\n                    className='mr-sm-2 m1-sm-5' />\n\n                <Button variant=\"outline-secondary\" id=\"button-addon2\"\n                        style={{\n                            height: '46px',\n                            margin: '9px',\n                            backgroundColor: 'dark',\n                            background: 'dark',\n                            color: 'black',\n                        }}\n                        onClick={submitSearchHandler}>\n                    Search\n                </Button>\n            </InputGroup>\n\n        </Form>\n    )\n}\n\n\n\n\n\n\nexport default SearchBox","import React, { useEffect }from \"react\";\nimport {Row, Col, Card} from \"react-bootstrap\";\nimport Post from \"../../components/Post/Post\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"../../components/Helpers/Loader/Loader\";\nimport Message from \"../../components/Helpers/Message/Message\";\nimport { postsListAction } from \"../../actions/actions\";\nimport Paginate from \"../Paginate/Paginate\";\nimport SearchBox from \"../../components/SearchBox/SearchBox\";\n\nfunction Home({ history }) {\n    const dispatch = useDispatch()\n    const postsListStore = useSelector(state => state.postsListStore)\n    const { error, loading, posts, page, pages} = postsListStore\n\n    let keyword = history.location.search\n\n    console.log(posts)\n\n    useEffect(() =>{\n        dispatch(postsListAction(keyword))\n    }, [dispatch, keyword])\n\n\n    return(\n        <div className=\"home-content-wrapper\">\n\n            <div>\n                <SearchBox />\n            </div>\n\n            <br/>\n\n            {loading ? <Loader />\n                : error ?\n                    <Message variant='danger'>\n                        {error}\n                    </Message>\n\n                    : <div>\n                        <Row>\n                            {posts.map(post => (\n                                <Col key={post.id} sm={12} md={6} lg={4} xl={3}>\n                                    <Post post={post} />\n                                </Col>\n                            ))}\n                        </Row>\n                        <Paginate page={page} pages={pages} keyword={keyword} />\n                    </div>\n            }\n\n        </div>\n    )\n}\n\nexport default Home;","import React, { useState, useEffect } from \"react\";\nimport {Row, Col, Image, ListGroup, Button, Card, Form} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"../../components/Helpers/Loader/Loader\";\nimport Message from \"../../components/Helpers/Message/Message\";\nimport { createPostCommentAction, postDetailsAction} from \"../../actions/actions\";\nimport {CREATE_POST_COMMENT_RESET} from \"../../constants/constants\";\n\n\nfunction SinglePost({ match, history, location }) {\n\n    const [comment, setComment] = useState('');\n\n    const dispatch = useDispatch();\n    const postDetails = useSelector(state => state.postDetails)\n    const { loading, error, post } = postDetails\n\n    const createPostComment = useSelector(state => state.createPostComment)\n    const { loading: createPostCommentLoading, error: createPostCommentError, success: createPostCommentSuccess } = createPostComment\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const redirect = location.search ? location.search.split('=')[1] : `/post/${match.params.id}`\n\n\n    useEffect(() =>{\n        if (createPostCommentSuccess){\n            setComment('')\n            dispatch({type: CREATE_POST_COMMENT_RESET})\n        }\n        dispatch(postDetailsAction(match.params.id))\n\n    }, [dispatch, match, location, history, createPostCommentSuccess])\n\n\n\n    const submitPostCommentHandler = (e) => {\n        e.preventDefault()\n        dispatch(createPostCommentAction(\n            match.params.id,\n            {\n                // userId,\n                comment\n            }\n        ))\n    }\n\n    return(\n        <div>\n            <Link to='/' className='btn btn-light my-3'>Go Back</Link>\n\n            { loading ?\n                <Loader />\n                : error\n                ? <Message variant='danger'>{error}</Message>\n                    : (\n                        <div>\n                            <Row>\n                                <Col md={6}>\n                                    <Image src={post.image} alt={post.title} fluid />\n                                </Col>\n                                <Col md={3}>\n                                    <ListGroup variant=\"flush\">\n\n                                        <ListGroup.Item>\n                                            <Card style={{ width: '18rem' }}>\n                                                <Card.Body>\n                                                    <Card.Title><h3>Advertisement</h3></Card.Title>\n                                                    <Card.Text>\n                                                        Some quick example text to build on the card title and make up the bulk of\n                                                        the card's content.\n                                                    </Card.Text>\n                                                    <Button variant=\"primary\" style={{ width: '100%' }}>Click to view more</Button>\n                                                </Card.Body>\n                                            </Card>\n                                        </ListGroup.Item>\n                                    </ListGroup>\n                                </Col>\n\n                            </Row>\n                            <br />\n                          <Row>\n\n                              <Col md={6}>\n                                  <Card>\n                                      <Card.Body>\n                                          <Card.Title><h3>{post.title}</h3></Card.Title>\n                                          <Card.Text>\n                                              {post.content}\n                                          </Card.Text>\n                                      </Card.Body>\n                                  </Card>\n                              </Col>\n\n                              <Col md={3}>\n                                  <ListGroup variant=\"flush\">\n\n                                      <ListGroup.Item>\n                                          <Card style={{ width: '18rem' }}>\n                                              <Card.Body>\n                                                  <Card.Title><h3>Recent Posts</h3></Card.Title>\n                                                  <Card.Text>\n                                                      Some quick example text to build on the card title and make up the bulk of\n                                                      the card's content.\n                                                  </Card.Text>\n\n                                              </Card.Body>\n                                          </Card>\n                                      </ListGroup.Item>\n                                  </ListGroup>\n                              </Col>\n\n                          </Row>\n\n                            <Row>\n                                <Col md={6}>\n                                    <h4>Comment</h4>\n                                    {post.comments.length === 0 && <Message variant='info'>   There is no comment yet for this post.</Message> }\n\n                                    <ListGroup variant='flush'>\n                                        {post.comments.map((com) => (\n                                            <ListGroup.Item key={com.id}>\n                                                <strong><h3>{com.name}</h3></strong>\n                                                <p>{com.created_on.substring(0,10)}</p>\n                                                <p>{com.comment}</p>\n                                            </ListGroup.Item>\n                                        ))}\n\n                                        <ListGroup.Item>\n                                            <h4>Comment on the Post</h4>\n\n                                            {createPostCommentLoading && <Loader />}\n                                            {createPostCommentSuccess && <Message variant='success'>{createPostCommentSuccess}</Message> }\n                                            {createPostCommentError && <Message variant='danger'>{createPostCommentError}</Message> }\n\n\n                                            {userInfo ? (\n                                                <Form onSubmit={submitPostCommentHandler}>\n                                                        <Form.Group controlId='comment'>\n                                                            <label>Comment</label>\n                                                            <Form.Control\n                                                                required\n                                                                as='textarea'\n                                                                value={comment}\n                                                                style={{ height: '120px'}}\n                                                                onChange={(e) => setComment(e.target.value)}\n                                                                row='5'>\n                                                            </Form.Control>\n                                                        </Form.Group>\n\n                                                    <br />\n                                                    <Button disabled={createPostCommentLoading} type='submit' variant='primary'>Submit</Button>\n\n                                                </Form>\n                                            ) : (\n                                                <Message variant='info' >Please  {'  '}\n                                                    <Link\n                                                        to={redirect ? `/login?redirect=${redirect}` : '/login'}>   login to submit a comment</Link>\n                                                </Message>\n                                            )}\n                                        </ListGroup.Item>\n                                    </ListGroup>\n                                </Col>\n                            </Row>\n                        </div>\n                    )\n            }\n\n        </div>\n    )\n}\n\nexport default SinglePost;","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nfunction FormsContainer({ children }) {\n    return (\n        <Container>\n            <Row className=\"justify-content-md-center\">\n                <Col xs={12} md={6}>\n                    {children}\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default FormsContainer","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../../components/Helpers/Loader/Loader'\nimport Message from '../../components/Helpers/Message/Message'\nimport FormsContainer from '../../container/FormsContainer/FormsContainer'\nimport { login } from '../../actions/actions'\n\nfunction LoginScreen({ location, history }) {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const dispatch = useDispatch()\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { error, loading, userInfo } = userLogin\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(login(email, password))\n    }\n\n    return (\n        <FormsContainer>\n            <h3>Sign In</h3>\n            <p>Sign into your Account</p>\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='email'>\n                    {/*<Form.Label>Email Address</Form.Label>*/}\n                    <Form.Control\n                        type='email'\n                        placeholder='Enter Email'\n                        required\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n\n                <br/>\n\n                <Form.Group controlId='password'>\n                    {/*<Form.Label>Password</Form.Label>*/}\n                    <Form.Control\n                        type='password'\n                        placeholder='Enter Password'\n                        required\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n\n                <br />\n                <Button type='submit' variant='primary'>\n                    Sign In\n                </Button>\n            </Form>\n\n            <Row className='py-4'>\n                <Col>\n                    New Customer? <Link\n                    to={redirect ? `/register?redirect=${redirect}` : '/register'}>\n                    Register\n                </Link>\n                </Col>\n            </Row>\n\n        </FormsContainer>\n    )\n}\n\nexport default LoginScreen","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../../components/Helpers/Loader/Loader'\nimport Message from '../../components/Helpers/Message/Message'\nimport FormsContainer from '../../container/FormsContainer/FormsContainer'\nimport { register } from '../../actions/actions'\n\nfunction Register({ location, history }) {\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    const userRegister = useSelector(state => state.userRegister)\n    const { error, loading, userInfo } = userRegister\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        if (password !== confirmPassword){\n            setMessage(\"Passwords entered do not match\")\n        }else {\n            dispatch(register(name, email, password))\n        }\n\n    }\n\n    return (\n        <FormsContainer>\n            <h3>Customer Registration</h3>\n            <p>Please, register with your valid information</p>\n            {message &&  <Message variant='danger'>{message}</Message>}\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='name'>\n                    {/*<Form.Label>Email Address</Form.Label>*/}\n                    <Form.Control\n                        type='text'\n                        placeholder='Enter your full name'\n                        required\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n\n                <br/>\n\n                <Form.Group controlId='email'>\n                    {/*<Form.Label>Email Address</Form.Label>*/}\n                    <Form.Control\n                        type='email'\n                        placeholder='Enter Email'\n                        required\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n\n                <br/>\n\n                <Form.Group controlId='password'>\n                    {/*<Form.Label>Password</Form.Label>*/}\n                    <Form.Control\n                        type='password'\n                        placeholder='Enter Password'\n                        required\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n\n                <br />\n\n                <Form.Group controlId='passwordConfirm'>\n                    {/*<Form.Label>Password</Form.Label>*/}\n                    <Form.Control\n                        type='password'\n                        placeholder='Confirm Password'\n                        required\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n\n                <br />\n                <Button type='submit' variant='primary'>\n                    Submit\n                </Button>\n            </Form>\n\n            <Row className='py-4'>\n                <Col>\n                    Already Customer? <Link\n                    to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n                    Sign In\n                </Link>\n                </Col>\n            </Row>\n\n        </FormsContainer>\n    )\n}\n\nexport default Register","import React, { useState, useEffect } from 'react'\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../../components/Helpers/Loader/Loader'\nimport Message from '../../components/Helpers/Message/Message'\nimport {getUserDetails, updateUserProfile} from '../../actions/actions'\nimport { USER_UPDATE_PROFILE_RESET } from \"../../constants/constants\";\n\nfunction Profile({ location, history }) {\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { error, loading, user } = userDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n    const { success } = userUpdateProfile\n\n\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else {\n            if (!user || !user.name || success || userInfo._id !== user._id) {\n                dispatch({type: USER_UPDATE_PROFILE_RESET})\n                dispatch(getUserDetails('profile'))\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n            }\n        }\n    }, [dispatch, history, userInfo, user, success])\n\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        if (password !== confirmPassword){\n            setMessage(\"Passwords entered do not match\")\n        }else {\n            dispatch(updateUserProfile({\n                'id': user._id,\n                'name': name,\n                'email': email,\n                'password': password\n            }))\n            setMessage('')\n        }\n\n    }\n\n\n    return (\n        <Row>\n            <Col md={3}>\n                <h3>User Profile</h3>\n                <p className='alert-info' style={{\n                    padding: '10px'\n                }}>Update your profile by altering any field and then click on \"Update\"</p>\n                {message &&  <Message variant='danger'>{message}</Message>}\n                {error && <Message variant='danger'>{error}</Message>}\n                {loading && <Loader />}\n                <Form onSubmit={submitHandler}>\n\n                    <Form.Group controlId='name'>\n                        {/*<Form.Label>Email Address</Form.Label>*/}\n                        <Form.Control\n                            type='text'\n                            placeholder='Full name'\n                            required\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <br/>\n\n                    <Form.Group controlId='email'>\n                        {/*<Form.Label>Email Address</Form.Label>*/}\n                        <Form.Control\n                            type='email'\n                            placeholder='Email'\n                            required\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <br/>\n\n                    <Form.Group controlId='password'>\n                        {/*<Form.Label>Password</Form.Label>*/}\n                        <Form.Control\n                            type='password'\n                            placeholder='Enter Password'\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <br />\n\n                    <Form.Group controlId='passwordConfirm'>\n                        {/*<Form.Label>Password</Form.Label>*/}\n                        <Form.Control\n                            type='password'\n                            placeholder='Confirm Password'\n                            value={confirmPassword}\n                            onChange={(e) => setConfirmPassword(e.target.value)}>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <br />\n                    <Button type='submit' variant='primary' style={{ width: \"100%\", }}>\n                        Update\n                    </Button>\n                </Form>\n            </Col>\n\n            <Col md={9}>\n                <h3>Request for Participation as Editor</h3>\n\n                    <Table striped responsive className='table-sm'>\n                        <thead>\n                            <tr>\n                                <th>Date for Request</th>\n                                <th>Status</th>\n                                <th>Details</th>\n                                <th></th>\n                            </tr>\n                        </thead>\n\n                        <tbody>\n                        <br />\n                        <br />\n                        <br />\n                        <p\n                            style={{\n                                textAlign: 'center'\n                            }}\n                        >Coming soon!!!</p>\n\n                        </tbody>\n\n                    </Table>\n\n            </Col>\n        </Row>\n    )\n}\n\nexport default Profile","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from \"../Helpers/Loader/Loader\";\nimport { postsListAction, updatePostAction, postDetailsAction} from \"../../actions/actions\";\nimport Message from \"../Helpers/Message/Message\";\nimport FormsContainer from \"../../container/FormsContainer/FormsContainer\";\nimport { UPDATE_POST_RESET } from \"../../constants/constants\";\nimport axios from \"axios\";\n\n\nfunction AddEditPost({ match, history }) {\n\n    const postId = match.params.id\n\n    const [title, setTitle] = useState('')\n    const [slug, setSlug] = useState('')\n    const [content, setContent] = useState('')\n    const [image, setImage] = useState('')\n    const [uploadPostImage, setUploadPostImage] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const postDetails = useSelector(state => state.postDetails)\n    const { error, loading, post } = postDetails\n\n    const updatePost = useSelector(state => state.updatePost)\n    const { error: updatePostError, loading: updatePostLoading, success: updatePostSuccess } = updatePost\n\n\n    useEffect(() => {\n\n        if(updatePostSuccess){\n            dispatch({type: UPDATE_POST_RESET})\n            history.push('/admin/posts/')\n        }else{\n            if (!post.title || post.id !== postId){\n                dispatch(postDetailsAction(postId))\n            }else {\n                setTitle(post.title)\n                setSlug(post.slug)\n                setContent(post.content)\n                setImage(post.image)\n            }\n        }\n    }, [dispatch, postId, post, history, updatePostSuccess])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updatePostAction({\n            id: postId,\n            title,\n            slug,\n            image,\n            content,\n        }))\n    }\n\n    const uploadPostImageHandler =  async (e) => {\n        const file = e.target.files[0]\n        const formData  = new FormData()\n\n        formData.append('image', file)\n        formData.append('post_id', postId)\n\n        setUploadPostImage(true)\n\n        try{\n            const config = {\n                headers: {\n                    'Content-Type': 'multipart/form-data',\n                }\n            }\n\n            const { data } = await axios.post(`/api/post/upload/`, formData, config)\n\n            setImage(data)\n            setUploadPostImage(false)\n\n        }catch (e) {\n            setUploadPostImage(false)\n        }\n    }\n\n    return (\n        <div>\n            <Link to='/admin/posts/'>\n                Go Back\n            </Link>\n\n            <FormsContainer>\n                <h3>Posts</h3>\n                <br/>\n\n                {updatePostLoading && <Loader />}\n                {updatePostError && <Message variant='danger'>{updatePostError}</Message> }\n\n                {loading ? <Loader /> : error ? <Message variant='danger' >{error}</Message>\n                    : (\n                        <Form onSubmit={submitHandler}>\n                            <Form.Group controlId='title'>\n                                <Form.Label>Post Title</Form.Label>\n                                <Form.Control\n                                    type='text'\n                                    placeholder='Post Title'\n                                    value={title}\n                                    onChange={(e) => setTitle(e.target.value)}>\n                                </Form.Control>\n                            </Form.Group>\n                            <br/>\n\n                            <Form.Group controlId='slug'>\n                                <Form.Label>Post slug</Form.Label>\n                                <Form.Control\n                                    type='text'\n                                    placeholder='Post slug'\n                                    value={slug}\n                                    onChange={(e) => setSlug(e.target.value)}>\n                                </Form.Control>\n                            </Form.Group>\n                            <br/>\n                            <Form.Group controlId='image'>\n                                <Form.Label>Post image</Form.Label>\n                                <Form.Control\n                                    type='text'\n                                    placeholder='Upload image'\n                                    value={image}\n                                    onChange={(e) => setImage(e.target.value)}>\n                                </Form.Control>\n                                <Form.Group controlId='image-file'>\n                                    <Form.Control\n                                        type='file'\n                                        size='sm'\n                                        custom='true'\n                                        onChange={uploadPostImageHandler} />\n                                </Form.Group>\n                                {uploadPostImage && <Loader />}\n\n                            </Form.Group>\n                            <br/>\n\n                            <Form.Group controlId='textarea'>\n                                <Form.Label>Content</Form.Label>\n                                <Form.Control\n                                    as=\"textarea\" rows={3}\n                                    type='textarea'\n                                    placeholder='Post Content'\n                                    value={content}\n                                    onChange={(e) => setContent(e.target.value)}>\n                                </Form.Control>\n                            </Form.Group>\n\n                            <br/>\n\n                            <Button type='submit' variant='primary'>\n                                Update\n                            </Button>\n                        </Form>\n                    )}\n            </FormsContainer >\n        </div>\n    )}\n\nexport default AddEditPost","import {Container, Nav, Navbar, NavDropdown} from \"react-bootstrap\";\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {logout} from \"../../actions/actions\";\n\nfunction HeaderScreen({ history }) {\n\n    const  userLogin  = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const dispatch  = useDispatch()\n\n    const logoutHandler = () => {\n        dispatch(logout())\n    }\n\n    return (\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n            <Container>\n                <LinkContainer to='/'>\n                    <Navbar.Brand>SalesBlink</Navbar.Brand>\n                </LinkContainer>\n\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\n\n                    <Nav className=\"me-auto\">\n                    </Nav>\n\n                    <Nav>\n\n                        <LinkContainer to='/'>\n                            <Nav.Link>Posts</Nav.Link>\n                        </LinkContainer>\n\n                        <LinkContainer to='/'>\n                            <Nav.Link> Resources</Nav.Link>\n                        </LinkContainer>\n\n\n\n                        {userInfo && userInfo.isAdmin && (\n                            <NavDropdown title='Manage Posts' id='adminmenu'>\n                                <LinkContainer to='/admin/posts/'>\n                                    <NavDropdown.Item>\n                                        Posts\n                                    </NavDropdown.Item>\n                                </LinkContainer>\n                            </NavDropdown>\n                        )}\n\n                        {userInfo ? (\n                            <NavDropdown title={userInfo.name} id='username'>\n                                <LinkContainer to='/profile'>\n                                    <NavDropdown.Item>\n                                        My Account\n                                    </NavDropdown.Item>\n                                </LinkContainer>\n\n                                <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\n                            </NavDropdown>\n                        ): (\n                            <LinkContainer to='/login'>\n                                <Nav.Link><i className=\"fas fa-user\"></i> Login</Nav.Link>\n                            </LinkContainer>\n\n                        )}\n\n                    </Nav>\n                </Navbar.Collapse>\n            </Container>\n        </Navbar>\n\n    )\n}\n\nexport default HeaderScreen;\n","import React from 'react'\nimport { Redirect, Route } from 'react-router-dom'\nimport {useSelector} from \"react-redux\";\n\nconst PrivateRoute = ({component: Component, ...rest}) => {\n\n    // Add your own authentication on the below line.\n    // const isLoggedIn = AuthService.isLoggedIn()\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    return (\n        <Route\n            {...rest}\n            render={props =>\n                userInfo ? (\n                    <Component {...props} />\n                ) : (\n                    <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n\n                )\n            }\n        />\n    )\n}\n\nexport default PrivateRoute","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport {Form, Button, Row, Col, Table} from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from \"../Helpers/Loader/Loader\";\nimport Message from \"../Helpers/Message/Message\";\nimport {postsListAction, deletePostAction, createPostAction} from \"../../actions/actions\";\nimport Paginate from \"../../container/Paginate/Paginate\";\nimport { CREATE_POST_RESET } from \"../../constants/constants\";\n\nfunction PostsList({ history, location}) {\n\n    const dispatch = useDispatch()\n\n    const postsListStore = useSelector(state => state.postsListStore)\n    const { error, loading, posts, pages, page } = postsListStore\n\n    const deletePost = useSelector(state => state.deletePost)\n    const { error: deletePostError, loading: deletePostLoading, success: deletePostSuccess } = deletePost\n\n    const createPost = useSelector(state => state.createPost)\n    const { error: createPostError, loading: createPostLoading, success: createPostSuccess, post: createdPost} = createPost\n\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    let keyword = history.location.search\n\n\n\n    useEffect(() => {\n        dispatch({type: CREATE_POST_RESET})\n        if (!userInfo.isAdmin){\n            history.push('/login')\n        }\n        if (createPostSuccess){\n            history.push(`/admin/post/${createdPost.id}/edit/`)\n        }else{\n            dispatch(postsListAction(keyword))\n        }\n\n    }, [dispatch, history, location, keyword, userInfo, deletePostSuccess, createPostSuccess, createdPost])\n\n    const deletePostHandler = (id) => {\n        if (window.confirm(\"Are you sure you want to delete this post\")){\n            dispatch(deletePostAction(id))\n        }\n    }\n\n\n    const createPostHandler = () => {\n        dispatch(createPostAction())\n    }\n    return (\n        <div>\n            <Row className='align-items-center'>\n                <Col>\n                    <h3>Posts</h3>\n                </Col>\n\n                <Col className='text-center'>\n                    <Button className='my-3' onClick={createPostHandler}>\n                        <i className='fas fa-plus'> Add Post</i>\n                    </Button>\n                </Col>\n            </Row>\n\n            {deletePostLoading && <Loader /> }\n            {deletePostError && <Message variant='danger'>{deletePostError}</Message> }\n\n            {createPostLoading && <Loader /> }\n            {createPostError && <Message variant='danger'>{createPostError}</Message> }\n\n                {loading ? (\n                    <Loader />\n                ) : error ? (<Message variant='danger'>{error}</Message>\n                ) : (\n                    <div>\n                    <Table striped hover bordered responsive className='table-sm'>\n                        <thead>\n                        <tr>\n                            <th>Title</th>\n                            <th>created On</th>\n                            <th>Actions</th>\n                        </tr>\n                        </thead>\n\n                        <tbody>\n                        {posts.map(post => (\n                            <tr key={post.id}>\n                                <td>{post.title}</td>\n                                <td>{post.created_on.substring(0,10)}</td>\n                                <td>\n                                    <LinkContainer to={`/admin/post/${post.id}/edit/`}>\n                                        <Button className='btn-sm'>\n                                            <i className='fas fa-edit'></i>\n                                        </Button>\n                                    </LinkContainer>\n\n                                    <Button variant='danger' className='btn-sm' onClick={() => deletePostHandler(post.id)}>\n                                        <i className='fas fa-trash'></i>\n                                    </Button>\n                                </td>\n\n                            </tr>\n                        ))}\n                        </tbody>\n\n                    </Table>\n                        <Paginate page={page} pages={pages} isAdmin={true} />\n                    </div>\n                )}\n        </div>\n    )\n}\n\nexport default PostsList","import Footer from './components/Footer/Footer';\nimport { Container } from \"react-bootstrap\";\nimport Home from \"./container/Home/Home\";\nimport SinglePost from \"./components/SinglePost/SinglePost\";\nimport Login from \"./components/Login/Login\";\nimport {HashRouter as Router, Route} from \"react-router-dom\";\nimport Register from \"./components/Register/Register\";\nimport Profile from \"./components/Profile/Profile\";\nimport AddEditPost from \"./components/AddEditPost/AddEditPosts\";\nimport HeaderScreen from \"./components/Header/HeaderScreen\";\nimport PrivateRoute from \"./container/PrivateRoute/PrivateRoute\";\nimport PostsList from \"./components/PostsList/PostsList\";\n\n\nfunction App() {\n    return (\n        <Router>\n            <HeaderScreen />\n\n            <main className=\"py-3\">\n                <Container>\n                    <Route path='/' component={Home} exact />\n                    <Route path='/post/:id' component={SinglePost} />\n                    <Route path='/login/' component={Login} />\n                    <Route path='/register/' component={Register} />\n\n                    <PrivateRoute path='/admin/posts/' component={PostsList} />\n                    <PrivateRoute path='/admin/post/:id/edit/' component={AddEditPost} />\n                    <PrivateRoute path='/profile/' component={Profile} />\n\n                </Container>\n            </main>\n\n            <Footer />\n        </Router>\n    );\n}\n\nexport default App;\n","import { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nimport {\n    postListReducer,\n    postDetailsReducer,\n    createPostCommentReducer,\n    updatePostReducer,\n    createPostReducer,\n    deletePostReducer,\n    userLoginReducer,\n    userRegisterReducer,\n    userDetailsReducer,\n    userUpdateProfileReducer,\n    updateUserReducer,\n\n} from \"./reducers/reducers\";\n\nconst reducer = combineReducers({\n    postsListStore: postListReducer,\n    postDetails: postDetailsReducer,\n    createPostComment:createPostCommentReducer,\n    updatePost:updatePostReducer,\n    createPost:createPostReducer,\n    deletePost:deletePostReducer,\n    userLogin: userLoginReducer,\n    userRegister: userRegisterReducer,\n    userDetails: userDetailsReducer,\n    userUpdateProfile: userUpdateProfileReducer,\n    updateUserS:updateUserReducer,\n});\n\n// Load localstorage data for userInfo\nconst userInfoFromLocalStorage = localStorage.getItem('userInfo') ?\n    JSON.parse(localStorage.getItem('userInfo')) : null\n\nconst initialState = {\n    userLogin: {userInfo: userInfoFromLocalStorage},\n};\nconst middleware = [thunk];\n\nconst store = createStore(reducer, initialState,\n    composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store;","import {\n    POST_LIST_REQUEST,\n    POST_LIST_SUCCESS,\n    POST_LIST_FAIL,\n    POST_DETAILS_REQUEST,\n    POST_DETAILS_SUCCESS,\n    POST_DETAILS_FAIL,\n    CREATE_POST_COMMENT_REQUEST,\n    CREATE_POST_COMMENT_SUCCESS,\n    CREATE_POST_COMMENT_FAIL,\n    CREATE_POST_COMMENT_RESET,\n    UPDATE_POST_REQUEST,\n    UPDATE_POST_SUCCESS,\n    UPDATE_POST_FAIL,\n    UPDATE_POST_RESET,\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n    USER_LOGOUT,\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_DETAILS_RESET,\n    CREATE_POST_REQUEST,\n    CREATE_POST_SUCCESS,\n    CREATE_POST_FAIL,\n    DELETE_POST_REQUEST,\n    DELETE_POST_SUCCESS,\n    DELETE_POST_FAIL,\n    CREATE_POST_RESET,\n    USER_UPDATE_PROFILE_RESET,\n    UPDATE_USER_REQUEST,\n    UPDATE_USER_SUCCESS,\n    UPDATE_USER_FAIL,\n    UPDATE_USER_RESET,\n\n} from '../constants/constants'\n\n\n// Post Reducers\nexport const postListReducer = (state = {posts: []}, action) => {\n    switch (action.type) {\n        case POST_LIST_REQUEST:\n            return {loading: true, posts: []}\n\n        case POST_LIST_SUCCESS:\n            return {\n                loading: false,\n                posts: action.payload.posts,\n                page: action.payload.page,\n                pages: action.payload.pages\n            }\n\n        case POST_LIST_FAIL:\n            return {loading: false, error: action.payload}\n\n        default:\n            return state\n    }\n}\n\nexport const postDetailsReducer = (state = {post: {comments: []}}, action) => {\n    switch (action.type) {\n        case POST_DETAILS_REQUEST:\n            return {loading: true, ...state}\n\n        case POST_DETAILS_SUCCESS:\n            return {loading: false, post: action.payload}\n\n        case POST_DETAILS_FAIL:\n            return {loading: false, error: action.payload}\n\n        default:\n            return state\n    }\n}\n\nexport const createPostReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CREATE_POST_REQUEST:\n            return {loading: true}\n\n        case CREATE_POST_SUCCESS:\n            return {loading: false, post: action.payload, success: true}\n\n        case CREATE_POST_FAIL:\n            return {loading: false, error: action.payload}\n\n        case CREATE_POST_RESET:\n            return {}\n\n\n        default:\n            return state\n    }\n}\n\nexport const deletePostReducer = (state = {}, action) => {\n    switch (action.type) {\n        case DELETE_POST_REQUEST:\n            return {loading: true}\n\n        case DELETE_POST_SUCCESS:\n            return {loading: false, success: true}\n\n        case DELETE_POST_FAIL:\n            return {loading: false, error: action.payload}\n\n        default:\n            return state\n    }\n}\n\nexport const updatePostReducer = (state = {post: {} }, action) => {\n    switch (action.type) {\n        case UPDATE_POST_REQUEST:\n            return {\n                loading: true\n            }\n\n        case UPDATE_POST_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n                product: action.payload\n            }\n\n        case UPDATE_POST_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        case UPDATE_POST_RESET:\n            return {\n                product: {}\n            }\n\n        default:\n            return state\n    }\n}\n\n// USER REDUCERS\nexport const userLoginReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_LOGIN_REQUEST:\n            return {loading: true}\n\n        case USER_LOGIN_SUCCESS:\n            return {loading: false, userInfo: action.payload}\n\n        case USER_LOGIN_FAIL:\n            return {loading: false, error: action.payload}\n\n        case USER_LOGOUT:\n            return {}\n\n        default:\n            return state\n    }\n}\n\nexport const userRegisterReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_REGISTER_REQUEST:\n            return {loading: true}\n\n        case USER_REGISTER_SUCCESS:\n            return {loading: false, userInfo: action.payload}\n\n        case USER_REGISTER_FAIL:\n            return {loading: false, error: action.payload}\n\n        case USER_LOGOUT:\n            return {}\n\n        default:\n            return state\n    }\n}\n\nexport const userDetailsReducer = (state = {user: {} }, action) => {\n    switch (action.type) {\n        case USER_DETAILS_REQUEST:\n            return {...state, loading: true}\n\n        case USER_DETAILS_SUCCESS:\n            return {loading: false, user: action.payload}\n\n        case USER_DETAILS_FAIL:\n            return {loading: false, error: action.payload}\n\n        case USER_DETAILS_RESET:\n            return {user: {}}\n\n        default:\n            return state\n    }\n}\n\nexport const userUpdateProfileReducer = (state = { }, action) => {\n    switch (action.type) {\n        case USER_UPDATE_PROFILE_REQUEST:\n            return {loading: true}\n\n        case USER_UPDATE_PROFILE_SUCCESS:\n            return {loading: false, success: true, userInfo: action.payload}\n\n        case USER_UPDATE_PROFILE_FAIL:\n            return {loading: false, error: action.payload}\n\n        case USER_UPDATE_PROFILE_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\nexport const updateUserReducer = (state = {user: {} }, action) => {\n    switch (action.type) {\n        case UPDATE_USER_REQUEST:\n            return {loading: true}\n\n        case UPDATE_USER_SUCCESS:\n            return {loading: false, success: true}\n\n        case UPDATE_USER_FAIL:\n            return {loading: false, error: action.payload}\n\n        case UPDATE_USER_RESET:\n            return {\n                user: {}\n            }\n\n        default:\n            return state\n    }\n}\n\nexport const createPostCommentReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CREATE_POST_COMMENT_REQUEST:\n            return {\n                loading: true\n            }\n\n        case CREATE_POST_COMMENT_SUCCESS:\n            return {\n                loading: false,\n                success: true\n            }\n\n        case CREATE_POST_COMMENT_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        case CREATE_POST_COMMENT_RESET:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        default:\n            return state\n    }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './bootstrap.min.css';\nimport App from './App';\nimport './index.css';\nimport {Provider} from \"react-redux\";\nimport store from \"./store\";\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}